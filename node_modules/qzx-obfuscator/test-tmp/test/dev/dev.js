'use strict';

Object.defineProperty(exports, "__esModule", { value: true });
var NoCustomNodes_1 = require("../../src/options/presets/NoCustomNodes");
(function () {
    var JavaScriptObfuscator = require("../../index");
    var obfuscatedCode = JavaScriptObfuscator.obfuscate("\n        (function(){\n            if (true) {\n                var foo = function () {\n                    console.log('abc');\n                };\n                var bar = function () {\n                    console.log('def');\n                };\n                var baz = function () {\n                    console.log('ghi');\n                };\n                var bark = function () {\n                    console.log('jkl');\n                };\n                var hawk = function () {\n                    console.log('mno');\n                };\n            \n                foo();\n                bar();\n                baz();\n                bark();\n                hawk();\n            }\n        })();\n        ", Object.assign({}, NoCustomNodes_1.NO_CUSTOM_NODES_PRESET, { compact: false, stringArray: false, stringArrayThreshold: 1, deadCodeInjection: true, deadCodeInjectionThreshold: 1 })).getObfuscatedCode();
    console.log(obfuscatedCode);
    console.log(eval(obfuscatedCode));
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vdGVzdC9kZXYvZGV2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEFBQVksQUFBQzs7O0FBQ2IsOEJBQWlGO0FBRWpGLENBQUM7QUFDRyxRQUFNLEFBQW9CLHVCQUFRLEFBQU8sUUFBQyxBQUFhLEFBQUMsQUFBQztBQUV6RCxRQUFJLEFBQWMsaUJBQVcsQUFBb0IscUJBQUMsQUFBUyxBQUN2RCxBQTBCQywrdkJBRU0sZ0JBQXNCLDBCQUN6QixBQUFPLFNBQUUsQUFBSyxPQUNkLEFBQVcsYUFBRSxBQUFLLE9BQ2xCLEFBQW9CLHNCQUFFLEFBQUMsR0FDdkIsQUFBaUIsbUJBQUUsQUFBSSxNQUN2QixBQUEwQiw0QkFBRSxBQUFDLEFBRXBDLE1BQUMsQUFBaUIsQUFBRSxBQUFDO0FBRXRCLEFBQU8sWUFBQyxBQUFHLElBQUMsQUFBYyxBQUFDLEFBQUM7QUFDNUIsQUFBTyxZQUFDLEFBQUcsSUFBQyxBQUFJLEtBQUMsQUFBYyxBQUFDLEFBQUMsQUFBQyxBQUN0QztBQUFDLEFBQUMsQUFBRSxBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgTk9fQ1VTVE9NX05PREVTX1BSRVNFVCB9IGZyb20gJy4uLy4uL3NyYy9vcHRpb25zL3ByZXNldHMvTm9DdXN0b21Ob2Rlcyc7XG5cbihmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgSmF2YVNjcmlwdE9iZnVzY2F0b3I6IGFueSA9IHJlcXVpcmUoXCIuLi8uLi9pbmRleFwiKTtcblxuICAgIGxldCBvYmZ1c2NhdGVkQ29kZTogc3RyaW5nID0gSmF2YVNjcmlwdE9iZnVzY2F0b3Iub2JmdXNjYXRlKFxuICAgICAgICBgXG4gICAgICAgIChmdW5jdGlvbigpe1xuICAgICAgICAgICAgaWYgKHRydWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgZm9vID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYWJjJyk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB2YXIgYmFyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZGVmJyk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB2YXIgYmF6ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZ2hpJyk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB2YXIgYmFyayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2prbCcpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgdmFyIGhhd2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdtbm8nKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgZm9vKCk7XG4gICAgICAgICAgICAgICAgYmFyKCk7XG4gICAgICAgICAgICAgICAgYmF6KCk7XG4gICAgICAgICAgICAgICAgYmFyaygpO1xuICAgICAgICAgICAgICAgIGhhd2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICAgICAgYCxcbiAgICAgICAge1xuICAgICAgICAgICAgLi4uTk9fQ1VTVE9NX05PREVTX1BSRVNFVCxcbiAgICAgICAgICAgIGNvbXBhY3Q6IGZhbHNlLFxuICAgICAgICAgICAgc3RyaW5nQXJyYXk6IGZhbHNlLFxuICAgICAgICAgICAgc3RyaW5nQXJyYXlUaHJlc2hvbGQ6IDEsXG4gICAgICAgICAgICBkZWFkQ29kZUluamVjdGlvbjogdHJ1ZSxcbiAgICAgICAgICAgIGRlYWRDb2RlSW5qZWN0aW9uVGhyZXNob2xkOiAxXG4gICAgICAgIH1cbiAgICApLmdldE9iZnVzY2F0ZWRDb2RlKCk7XG5cbiAgICBjb25zb2xlLmxvZyhvYmZ1c2NhdGVkQ29kZSk7XG4gICAgY29uc29sZS5sb2coZXZhbChvYmZ1c2NhdGVkQ29kZSkpO1xufSkoKTtcbiJdfQ==