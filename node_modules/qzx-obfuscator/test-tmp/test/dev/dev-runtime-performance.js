'use strict';

(function () {
    var JavaScriptObfuscator = require("../../index");
    var obfuscatedCode = JavaScriptObfuscator.obfuscate("\n        var start = new Date();\n        var log = console.log;\n        console.log = function () {};\n        \n        " + String("\n            (function () {\n                var result = 1,\n                    term1 = 0,\n                    term2 = 1,\n                    i = 1;\n                while(i < 10)\n                {\n                    var test = 10;\n                    result = term1 + term2;\n                    console.log(result);\n                    term1 = term2;\n                    term2 = result;\n                    i++;\n                }\n        \n                console.log(test);\n                \n                var test = function (test) {\n                    console.log(test);\n                    \n                    if (true) {\n                        var test = 5\n                    }\n                    \n                    return test;\n                }\n                \n                console.log(test(1));\n                \n                function test2 (abc) {\n                    function test1 () {\n                      console.log('inside', abc.item);\n                    }\n                    \n                    console.log('\u0442\u0435\u0441\u0442', abc);\n                    \n                    var abc = {};\n                    \n                    return abc.item = 15, test1();\n                };\n                \n                var regexptest = /version\\/(\\d+)/i;\n                console.log(regexptest);\n                \n                test2(22);\n                console.log(105.4);\n                console.log(true, false);\n                \n                var sA = 'shorthand1';\n                var sB = 'shorthand2';\n                \n                console.log({sA, sB});\n                \n                try {\n                } catch (error) {\n                    console.log(error);\n                }\n            })();\n        ").repeat(1000) + "\n        \n        console.log = log;\n        console.log(new Date() - start);\n    ", {
        disableConsoleOutput: false
    }).getObfuscatedCode();
    console.log(eval(obfuscatedCode));
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2LXJ1bnRpbWUtcGVyZm9ybWFuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90ZXN0L2Rldi9kZXYtcnVudGltZS1wZXJmb3JtYW5jZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxBQUFZLEFBQUM7O0FBRWIsQ0FBQztBQUNHLFFBQU0sQUFBb0IsdUJBQVEsQUFBTyxRQUFDLEFBQWEsQUFBQyxBQUFDO0FBRXpELFFBQUksQUFBYyxzQ0FBZ0MsQUFBUyxBQUFDLDJJQUt0RCxBQUFNLEFBQUMsQUEyRFIsQUFBQyx5eURBQUMsQUFBTSxPQUFDLEFBQUksQUFBQyxBQUlsQjtBQUVPLEFBQW9CLDhCQUFFLEFBQUssQUFDOUIsQUFDSjtBQUhHLEtBckV5QixBQUFvQixFQXdFL0MsQUFBaUIsQUFBRSxBQUFDO0FBRXRCLEFBQU8sWUFBQyxBQUFHLElBQUMsQUFBSSxLQUFDLEFBQWMsQUFBQyxBQUFDLEFBQUMsQUFDdEM7QUFBQyxBQUFDLEFBQUUsQUFBQyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuKGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBKYXZhU2NyaXB0T2JmdXNjYXRvcjogYW55ID0gcmVxdWlyZShcIi4uLy4uL2luZGV4XCIpO1xuXG4gICAgbGV0IG9iZnVzY2F0ZWRDb2RlOiBzdHJpbmcgPSBKYXZhU2NyaXB0T2JmdXNjYXRvci5vYmZ1c2NhdGUoYFxuICAgICAgICB2YXIgc3RhcnQgPSBuZXcgRGF0ZSgpO1xuICAgICAgICB2YXIgbG9nID0gY29uc29sZS5sb2c7XG4gICAgICAgIGNvbnNvbGUubG9nID0gZnVuY3Rpb24gKCkge307XG4gICAgICAgIFxuICAgICAgICAke1N0cmluZyhgXG4gICAgICAgICAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSAxLFxuICAgICAgICAgICAgICAgICAgICB0ZXJtMSA9IDAsXG4gICAgICAgICAgICAgICAgICAgIHRlcm0yID0gMSxcbiAgICAgICAgICAgICAgICAgICAgaSA9IDE7XG4gICAgICAgICAgICAgICAgd2hpbGUoaSA8IDEwKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRlc3QgPSAxMDtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gdGVybTEgKyB0ZXJtMjtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgdGVybTEgPSB0ZXJtMjtcbiAgICAgICAgICAgICAgICAgICAgdGVybTIgPSByZXN1bHQ7XG4gICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRlc3QpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHZhciB0ZXN0ID0gZnVuY3Rpb24gKHRlc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGVzdCk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBpZiAodHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRlc3QgPSA1XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0ZXN0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0ZXN0KDEpKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiB0ZXN0MiAoYWJjKSB7XG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHRlc3QxICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnaW5zaWRlJywgYWJjLml0ZW0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn0YLQtdGB0YInLCBhYmMpO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgdmFyIGFiYyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFiYy5pdGVtID0gMTUsIHRlc3QxKCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB2YXIgcmVnZXhwdGVzdCA9IC92ZXJzaW9uXFxcXC8oXFxcXGQrKS9pO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlZ2V4cHRlc3QpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHRlc3QyKDIyKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygxMDUuNCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codHJ1ZSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHZhciBzQSA9ICdzaG9ydGhhbmQxJztcbiAgICAgICAgICAgICAgICB2YXIgc0IgPSAnc2hvcnRoYW5kMic7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coe3NBLCBzQn0pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKCk7XG4gICAgICAgIGApLnJlcGVhdCgxMDAwKX1cbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nID0gbG9nO1xuICAgICAgICBjb25zb2xlLmxvZyhuZXcgRGF0ZSgpIC0gc3RhcnQpO1xuICAgIGAsXG4gICAgICAgIHtcbiAgICAgICAgICAgIGRpc2FibGVDb25zb2xlT3V0cHV0OiBmYWxzZSxcbiAgICAgICAgfVxuICAgICkuZ2V0T2JmdXNjYXRlZENvZGUoKTtcblxuICAgIGNvbnNvbGUubG9nKGV2YWwob2JmdXNjYXRlZENvZGUpKTtcbn0pKCk7XG4iXX0=