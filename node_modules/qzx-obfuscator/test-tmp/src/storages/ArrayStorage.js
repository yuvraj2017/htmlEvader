"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var inversify_1 = require("inversify");
var ServiceIdentifiers_1 = require("../container/ServiceIdentifiers");
var Initializable_1 = require("../decorators/Initializable");
var ArrayStorage = function () {
    function ArrayStorage(randomGenerator) {
        _classCallCheck(this, ArrayStorage);

        this.storageLength = 0;
        this.randomGenerator = randomGenerator;
    }

    _createClass(ArrayStorage, [{
        key: "get",
        value: function get(key) {
            var value = this.storage[key];
            if (!value) {
                throw new Error("No value found in array storage with key `" + key + "`");
            }
            return value;
        }
    }, {
        key: "getKeyOf",
        value: function getKeyOf(value) {
            var key = this.storage.indexOf(value);
            return key >= 0 ? key : null;
        }
    }, {
        key: "getLength",
        value: function getLength() {
            return this.storageLength;
        }
    }, {
        key: "getStorage",
        value: function getStorage() {
            return this.storage;
        }
    }, {
        key: "getStorageId",
        value: function getStorageId() {
            return this.storageId;
        }
    }, {
        key: "initialize",
        value: function initialize() {
            this.storage = [];
            this.storageId = this.randomGenerator.getRandomString(6);
        }
    }, {
        key: "mergeWith",
        value: function mergeWith(storage) {
            var mergeId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            this.storage = [].concat(_toConsumableArray(this.storage), _toConsumableArray(storage.getStorage()));
            if (mergeId) {
                this.storageId = storage.getStorageId();
            }
        }
    }, {
        key: "set",
        value: function set(key, value) {
            if (key === this.storageLength) {
                this.storage.push(value);
            } else {
                this.storage.splice(key, 0, value);
            }
            this.storageLength++;
        }
    }]);

    return ArrayStorage;
}();
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", Array)], ArrayStorage.prototype, "storage", void 0);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", String)], ArrayStorage.prototype, "storageId", void 0);
ArrayStorage = tslib_1.__decorate([inversify_1.injectable(), tslib_1.__param(0, inversify_1.inject(ServiceIdentifiers_1.ServiceIdentifiers.IRandomGenerator)), tslib_1.__metadata("design:paramtypes", [Object])], ArrayStorage);
exports.ArrayStorage = ArrayStorage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXJyYXlTdG9yYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0b3JhZ2VzL0FycmF5U3RvcmFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsMEJBQStDO0FBQy9DLG1DQUFxRTtBQUtyRSw4QkFBNEQ7QUFHNUQ7QUEwQkksMEJBQ2lELEFBQWlDOzs7QUFOMUUsYUFBYSxnQkFBVyxBQUFDLEFBQUM7QUFROUIsQUFBSSxhQUFDLEFBQWUsa0JBQUcsQUFBZSxBQUFDLEFBQzNDO0FBQUMsQUFNTSxBQUFHOztBQXBDZCxBQUFzQixBQUFZOzs0QkFvQ2xCLEFBQVc7QUFDbkIsZ0JBQU0sQUFBSyxRQUFrQixBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQUcsQUFBQyxBQUFDO0FBRS9DLEFBQUUsQUFBQyxnQkFBQyxDQUFDLEFBQUssQUFBQyxPQUFDLEFBQUM7QUFDVCxzQkFBTSxJQUFJLEFBQUssQUFBQyxxREFBOEMsQUFBRyxBQUFJLEFBQUMsQUFBQyxBQUMzRTtBQUFDO0FBRUQsQUFBTSxtQkFBQyxBQUFLLEFBQUMsQUFDakI7QUFBQyxBQU1NLEFBQVE7OztpQ0FBRSxBQUFRO0FBQ3JCLGdCQUFNLEFBQUcsTUFBVyxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQU8sUUFBQyxBQUFLLEFBQUMsQUFBQztBQUVoRCxBQUFNLG1CQUFDLEFBQUcsT0FBSSxBQUFDLElBQUcsQUFBRyxNQUFHLEFBQUksQUFBQyxBQUNqQztBQUFDLEFBS00sQUFBUzs7OztBQUNaLEFBQU0sbUJBQUMsQUFBSSxLQUFDLEFBQWEsQUFBQyxBQUM5QjtBQUFDLEFBS00sQUFBVTs7OztBQUNiLEFBQU0sbUJBQUMsQUFBSSxLQUFDLEFBQU8sQUFBQyxBQUN4QjtBQUFDLEFBS00sQUFBWTs7OztBQUNmLEFBQU0sbUJBQUMsQUFBSSxLQUFDLEFBQVMsQUFBQyxBQUMxQjtBQUFDLEFBS00sQUFBVSxBQUFFLEFBQUcsQUFBVzs7OztBQUM3QixBQUFJLGlCQUFDLEFBQU8sVUFBRyxBQUFFLEFBQUM7QUFDbEIsQUFBSSxpQkFBQyxBQUFTLFlBQUcsQUFBSSxLQUFDLEFBQWUsZ0JBQUMsQUFBZSxnQkFBQyxBQUFDLEFBQUMsQUFBQyxBQUM3RDtBQUFDLEFBTU0sQUFBUzs7O2tDQUFFLEFBQWE7Z0JBQUUsOEVBQW1CLEFBQUs7O0FBQ3JELEFBQUksaUJBQUMsQUFBTyxBQUFHLEFBQUMsdUNBQUcsQUFBSSxLQUFDLEFBQU8sQUFBRSw2QkFBRyxBQUFPLFFBQUMsQUFBVSxBQUFFLEFBQUMsQUFBQztBQUUxRCxBQUFFLEFBQUMsZ0JBQUMsQUFBTyxBQUFDLFNBQUMsQUFBQztBQUNWLEFBQUkscUJBQUMsQUFBUyxZQUFHLEFBQU8sUUFBQyxBQUFZLEFBQUUsQUFBQyxBQUM1QztBQUFDLEFBQ0w7QUFBQyxBQU1NLEFBQUc7Ozs0QkFBRSxBQUFXLEtBQUUsQUFBUTtBQUM3QixBQUFFLEFBQUMsZ0JBQUMsQUFBRyxRQUFLLEFBQUksS0FBQyxBQUFhLEFBQUMsZUFBQyxBQUFDO0FBQzdCLEFBQUkscUJBQUMsQUFBTyxRQUFDLEFBQUksS0FBQyxBQUFLLEFBQUMsQUFBQyxBQUM3QjtBQUFDLEFBQUMsQUFBSSxtQkFBQyxBQUFDO0FBQ0osQUFBSSxxQkFBQyxBQUFPLFFBQUMsQUFBTSxPQUFDLEFBQUcsS0FBRSxBQUFDLEdBQUUsQUFBSyxBQUFDLEFBQUMsQUFDdkM7QUFBQztBQUVELEFBQUksaUJBQUMsQUFBYSxBQUFFLEFBQUMsQUFDekI7QUFBQyxBQUNKOzs7OztBQXBHRyxvQkFEQyxnQkFBYSxBQUFFLG9HQUNPO0FBTXZCLG9CQURDLGdCQUFhLEFBQUUsdUdBQ1k7QUFoQlYsQUFBWSxtQ0FEakMsWUFBVSxBQUFFLGNBNEJKLG1CQUFBLFlBQU0sT0FBQyxxQkFBa0IsbUJBQUMsQUFBZ0IsQUFBQyx3RUEzQjlCLEFBQVksQUE4R2pDO0FBOUdxQix1QkFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluamVjdGFibGUsIGluamVjdCB9IGZyb20gJ2ludmVyc2lmeSc7XG5pbXBvcnQgeyBTZXJ2aWNlSWRlbnRpZmllcnMgfSBmcm9tICcuLi9jb250YWluZXIvU2VydmljZUlkZW50aWZpZXJzJztcblxuaW1wb3J0IHsgSVJhbmRvbUdlbmVyYXRvciB9IGZyb20gJy4uL2ludGVyZmFjZXMvdXRpbHMvSVJhbmRvbUdlbmVyYXRvcic7XG5pbXBvcnQgeyBJU3RvcmFnZSB9IGZyb20gJy4uL2ludGVyZmFjZXMvc3RvcmFnZXMvSVN0b3JhZ2UnO1xuXG5pbXBvcnQgeyBpbml0aWFsaXphYmxlIH0gZnJvbSAnLi4vZGVjb3JhdG9ycy9Jbml0aWFsaXphYmxlJztcblxuQGluamVjdGFibGUoKVxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFycmF5U3RvcmFnZSA8VD4gaW1wbGVtZW50cyBJU3RvcmFnZSA8VD4ge1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHtJUmFuZG9tR2VuZXJhdG9yfVxuICAgICAqL1xuICAgIHByb3RlY3RlZCByZWFkb25seSByYW5kb21HZW5lcmF0b3I6IElSYW5kb21HZW5lcmF0b3I7XG5cbiAgICAvKipcbiAgICAgKiBAdHlwZSB7VFtdfVxuICAgICAqL1xuICAgIEBpbml0aWFsaXphYmxlKClcbiAgICBwcm90ZWN0ZWQgc3RvcmFnZTogVFtdO1xuXG4gICAgLyoqXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBAaW5pdGlhbGl6YWJsZSgpXG4gICAgcHJvdGVjdGVkIHN0b3JhZ2VJZDogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQHR5cGUge251bWJlcn1cbiAgICAgKi9cbiAgICBwcml2YXRlIHN0b3JhZ2VMZW5ndGg6IG51bWJlciA9IDA7XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0lSYW5kb21HZW5lcmF0b3J9IHJhbmRvbUdlbmVyYXRvclxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yIChcbiAgICAgICAgQGluamVjdChTZXJ2aWNlSWRlbnRpZmllcnMuSVJhbmRvbUdlbmVyYXRvcikgcmFuZG9tR2VuZXJhdG9yOiBJUmFuZG9tR2VuZXJhdG9yXG4gICAgKSB7XG4gICAgICAgIHRoaXMucmFuZG9tR2VuZXJhdG9yID0gcmFuZG9tR2VuZXJhdG9yO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBrZXlcbiAgICAgKiBAcmV0dXJucyB7VH1cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0IChrZXk6IG51bWJlcik6IFQge1xuICAgICAgICBjb25zdCB2YWx1ZTogVCB8IHVuZGVmaW5lZCA9IHRoaXMuc3RvcmFnZVtrZXldO1xuXG4gICAgICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gdmFsdWUgZm91bmQgaW4gYXJyYXkgc3RvcmFnZSB3aXRoIGtleSBcXGAke2tleX1cXGBgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge1R9IHZhbHVlXG4gICAgICogQHJldHVybnMge251bWJlcn1cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0S2V5T2YgKHZhbHVlOiBUKTogbnVtYmVyIHwgbnVsbCB7XG4gICAgICAgIGNvbnN0IGtleTogbnVtYmVyID0gdGhpcy5zdG9yYWdlLmluZGV4T2YodmFsdWUpO1xuXG4gICAgICAgIHJldHVybiBrZXkgPj0gMCA/IGtleSA6IG51bGw7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMge251bWJlcn1cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0TGVuZ3RoICgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5zdG9yYWdlTGVuZ3RoO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHtUW119XG4gICAgICovXG4gICAgcHVibGljIGdldFN0b3JhZ2UgKCk6IFRbXSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0b3JhZ2U7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMge3N0cmluZ31cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0U3RvcmFnZUlkICgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5zdG9yYWdlSWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHthbnlbXX0gYXJnc1xuICAgICAqL1xuICAgIHB1YmxpYyBpbml0aWFsaXplICguLi5hcmdzOiBhbnlbXSk6IHZvaWQge1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBbXTtcbiAgICAgICAgdGhpcy5zdG9yYWdlSWQgPSB0aGlzLnJhbmRvbUdlbmVyYXRvci5nZXRSYW5kb21TdHJpbmcoNik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHt0aGlzfSBzdG9yYWdlXG4gICAgICogQHBhcmFtIHtib29sZWFufSBtZXJnZUlkXG4gICAgICovXG4gICAgcHVibGljIG1lcmdlV2l0aCAoc3RvcmFnZTogdGhpcywgbWVyZ2VJZDogYm9vbGVhbiA9IGZhbHNlKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3RvcmFnZSA9IFsuLi50aGlzLnN0b3JhZ2UsIC4uLnN0b3JhZ2UuZ2V0U3RvcmFnZSgpXTtcblxuICAgICAgICBpZiAobWVyZ2VJZCkge1xuICAgICAgICAgICAgdGhpcy5zdG9yYWdlSWQgPSBzdG9yYWdlLmdldFN0b3JhZ2VJZCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGtleVxuICAgICAqIEBwYXJhbSB7VH0gdmFsdWVcbiAgICAgKi9cbiAgICBwdWJsaWMgc2V0IChrZXk6IG51bWJlciwgdmFsdWU6IFQpOiB2b2lkIHtcbiAgICAgICAgaWYgKGtleSA9PT0gdGhpcy5zdG9yYWdlTGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLnN0b3JhZ2UucHVzaCh2YWx1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnN0b3JhZ2Uuc3BsaWNlKGtleSwgMCwgdmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zdG9yYWdlTGVuZ3RoKys7XG4gICAgfVxufVxuIl19