"use strict";

var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; })();

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var inversify_1 = require("inversify");
var ServiceIdentifiers_1 = require("../container/ServiceIdentifiers");
var Initializable_1 = require("../decorators/Initializable");
var MapStorage = function () {
    function MapStorage(randomGenerator) {
        _classCallCheck(this, MapStorage);

        this.randomGenerator = randomGenerator;
    }

    _createClass(MapStorage, [{
        key: "get",
        value: function get(key) {
            var value = this.storage.get(key);
            if (!value) {
                throw new Error("No value found in map storage with key `" + key + "`");
            }
            return value;
        }
    }, {
        key: "getKeyOf",
        value: function getKeyOf(value) {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = this.storage[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var _step$value = _slicedToArray(_step.value, 2),
                        key = _step$value[0],
                        storageValue = _step$value[1];

                    if (value === storageValue) {
                        return key;
                    }
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            return null;
        }
    }, {
        key: "getLength",
        value: function getLength() {
            return this.storage.size;
        }
    }, {
        key: "getStorage",
        value: function getStorage() {
            return this.storage;
        }
    }, {
        key: "getStorageId",
        value: function getStorageId() {
            return this.storageId;
        }
    }, {
        key: "initialize",
        value: function initialize() {
            this.storage = new Map();
            this.storageId = this.randomGenerator.getRandomString(6);
        }
    }, {
        key: "mergeWith",
        value: function mergeWith(storage) {
            var mergeId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            this.storage = new Map([].concat(_toConsumableArray(this.storage), _toConsumableArray(storage.getStorage())));
            if (mergeId) {
                this.storageId = storage.getStorageId();
            }
        }
    }, {
        key: "set",
        value: function set(key, value) {
            this.storage.set(key, value);
        }
    }]);

    return MapStorage;
}();
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", String)], MapStorage.prototype, "storageId", void 0);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", Map)], MapStorage.prototype, "storage", void 0);
MapStorage = tslib_1.__decorate([inversify_1.injectable(), tslib_1.__param(0, inversify_1.inject(ServiceIdentifiers_1.ServiceIdentifiers.IRandomGenerator)), tslib_1.__metadata("design:paramtypes", [Object])], MapStorage);
exports.MapStorage = MapStorage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFwU3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdG9yYWdlcy9NYXBTdG9yYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLDBCQUErQztBQUMvQyxtQ0FBcUU7QUFLckUsOEJBQTREO0FBRzVEO0FBcUJJLHdCQUNpRCxBQUFpQzs7O0FBRTlFLEFBQUksYUFBQyxBQUFlLGtCQUFHLEFBQWUsQUFBQyxBQUMzQztBQUFDLEFBTU0sQUFBRzs7QUEvQmQsQUFBc0IsQUFBVTs7NEJBK0JoQixBQUFvQjtBQUM1QixnQkFBTSxBQUFLLFFBQWtCLEFBQUksS0FBQyxBQUFPLFFBQUMsQUFBRyxJQUFDLEFBQUcsQUFBQyxBQUFDO0FBRW5ELEFBQUUsQUFBQyxnQkFBQyxDQUFDLEFBQUssQUFBQyxPQUFDLEFBQUM7QUFDVCxzQkFBTSxJQUFJLEFBQUssQUFBQyxtREFBNEMsQUFBRyxBQUFJLEFBQUMsQUFBQyxBQUN6RTtBQUFDO0FBRUQsQUFBTSxtQkFBQyxBQUFLLEFBQUMsQUFDakI7QUFBQyxBQU1NLEFBQVE7OztpQ0FBRSxBQUFROzs7Ozs7QUFDckIsQUFBRyxBQUFDLEFBQUMsQUFBTSxxQ0FBdUIsQUFBSSxLQUFDLEFBQU8sQUFBQztBQUFDLEFBQUM7d0JBQXJDLEFBQUc7d0JBQUUsQUFBWSxBQUFDOztBQUMxQixBQUFFLEFBQUMsd0JBQUMsQUFBSyxVQUFLLEFBQVksQUFBQyxjQUFDLEFBQUM7QUFDekIsQUFBTSwrQkFBQyxBQUFHLEFBQUMsQUFDZjtBQUFDLEFBQ0w7QUFBQzs7Ozs7Ozs7Ozs7Ozs7OztBQUVELEFBQU0sbUJBQUMsQUFBSSxBQUFDLEFBQ2hCO0FBQUMsQUFLTSxBQUFTOzs7O0FBQ1osQUFBTSxtQkFBQyxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQUksQUFBQyxBQUM3QjtBQUFDLEFBS00sQUFBVTs7OztBQUNiLEFBQU0sbUJBQUMsQUFBSSxLQUFDLEFBQU8sQUFBQyxBQUN4QjtBQUFDLEFBS00sQUFBWTs7OztBQUNmLEFBQU0sbUJBQUMsQUFBSSxLQUFDLEFBQVMsQUFBQyxBQUMxQjtBQUFDLEFBS00sQUFBVSxBQUFFLEFBQUcsQUFBVzs7OztBQUM3QixBQUFJLGlCQUFDLEFBQU8sVUFBRyxJQUFJLEFBQUcsQUFBdUIsQUFBQztBQUM5QyxBQUFJLGlCQUFDLEFBQVMsWUFBRyxBQUFJLEtBQUMsQUFBZSxnQkFBQyxBQUFlLGdCQUFDLEFBQUMsQUFBQyxBQUFDLEFBQzdEO0FBQUMsQUFNTSxBQUFTOzs7a0NBQUUsQUFBYTtnQkFBRSw4RUFBbUIsQUFBSzs7QUFDckQsQUFBSSxpQkFBQyxBQUFPLFVBQUcsSUFBSSxBQUFHLEFBQXNCLEFBQUMsaUNBQUcsQUFBSSxLQUFDLEFBQU8sQUFBRSw2QkFBRyxBQUFPLFFBQUMsQUFBVSxBQUFFLEFBQUMsQUFBQyxBQUFDO0FBRXhGLEFBQUUsQUFBQyxnQkFBQyxBQUFPLEFBQUMsU0FBQyxBQUFDO0FBQ1YsQUFBSSxxQkFBQyxBQUFTLFlBQUcsQUFBTyxRQUFDLEFBQVksQUFBRSxBQUFDLEFBQzVDO0FBQUMsQUFDTDtBQUFDLEFBTU0sQUFBRzs7OzRCQUFFLEFBQW9CLEtBQUUsQUFBUTtBQUN0QyxBQUFJLGlCQUFDLEFBQU8sUUFBQyxBQUFHLElBQUMsQUFBRyxLQUFFLEFBQUssQUFBQyxBQUFDLEFBQ2pDO0FBQUMsQUFDSjs7Ozs7QUE3Rkcsb0JBREMsZ0JBQWEsQUFBRSxxR0FDWTtBQU01QixvQkFEQyxnQkFBYSxBQUFFLG1EQUNHLEFBQUcsNkNBQXNCO0FBaEIxQixBQUFVLGlDQUQvQixZQUFVLEFBQUUsY0F1QkosbUJBQUEsWUFBTSxPQUFDLHFCQUFrQixtQkFBQyxBQUFnQixBQUFDLHdFQXRCOUIsQUFBVSxBQXVHL0I7QUF2R3FCLHFCQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5qZWN0YWJsZSwgaW5qZWN0IH0gZnJvbSAnaW52ZXJzaWZ5JztcbmltcG9ydCB7IFNlcnZpY2VJZGVudGlmaWVycyB9IGZyb20gJy4uL2NvbnRhaW5lci9TZXJ2aWNlSWRlbnRpZmllcnMnO1xuXG5pbXBvcnQgeyBJUmFuZG9tR2VuZXJhdG9yIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy91dGlscy9JUmFuZG9tR2VuZXJhdG9yJztcbmltcG9ydCB7IElTdG9yYWdlIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9zdG9yYWdlcy9JU3RvcmFnZSc7XG5cbmltcG9ydCB7IGluaXRpYWxpemFibGUgfSBmcm9tICcuLi9kZWNvcmF0b3JzL0luaXRpYWxpemFibGUnO1xuXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTWFwU3RvcmFnZSA8VD4gaW1wbGVtZW50cyBJU3RvcmFnZSA8VD4ge1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHtJUmFuZG9tR2VuZXJhdG9yfVxuICAgICAqL1xuICAgIHByb3RlY3RlZCByZWFkb25seSByYW5kb21HZW5lcmF0b3I6IElSYW5kb21HZW5lcmF0b3I7XG5cbiAgICAvKipcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIEBpbml0aWFsaXphYmxlKClcbiAgICBwcm90ZWN0ZWQgc3RvcmFnZUlkOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBAdHlwZSB7TWFwIDxzdHJpbmcgfCBudW1iZXIsIFQ+fVxuICAgICAqL1xuICAgIEBpbml0aWFsaXphYmxlKClcbiAgICBwcm90ZWN0ZWQgc3RvcmFnZTogTWFwIDxzdHJpbmcgfCBudW1iZXIsIFQ+O1xuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtJUmFuZG9tR2VuZXJhdG9yfSByYW5kb21HZW5lcmF0b3JcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvciAoXG4gICAgICAgIEBpbmplY3QoU2VydmljZUlkZW50aWZpZXJzLklSYW5kb21HZW5lcmF0b3IpIHJhbmRvbUdlbmVyYXRvcjogSVJhbmRvbUdlbmVyYXRvclxuICAgICkge1xuICAgICAgICB0aGlzLnJhbmRvbUdlbmVyYXRvciA9IHJhbmRvbUdlbmVyYXRvcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZyB8IG51bWJlcn0ga2V5XG4gICAgICogQHJldHVybnMge1R9XG4gICAgICovXG4gICAgcHVibGljIGdldCAoa2V5OiBzdHJpbmcgfCBudW1iZXIpOiBUIHtcbiAgICAgICAgY29uc3QgdmFsdWU6IFQgfCB1bmRlZmluZWQgPSB0aGlzLnN0b3JhZ2UuZ2V0KGtleSk7XG5cbiAgICAgICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyB2YWx1ZSBmb3VuZCBpbiBtYXAgc3RvcmFnZSB3aXRoIGtleSBcXGAke2tleX1cXGBgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge1R9IHZhbHVlXG4gICAgICogQHJldHVybnMge3N0cmluZyB8IG51bWJlciB8IG51bGx9XG4gICAgICovXG4gICAgcHVibGljIGdldEtleU9mICh2YWx1ZTogVCk6IHN0cmluZyB8IG51bWJlciB8IG51bGwge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHN0b3JhZ2VWYWx1ZV0gb2YgdGhpcy5zdG9yYWdlKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgPT09IHN0b3JhZ2VWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBrZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfVxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRMZW5ndGggKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0b3JhZ2Uuc2l6ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyB7TWFwIDxzdHJpbmcgfCBudW1iZXIsIFQ+fVxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRTdG9yYWdlICgpOiBNYXAgPHN0cmluZyB8IG51bWJlciwgVD4ge1xuICAgICAgICByZXR1cm4gdGhpcy5zdG9yYWdlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgcHVibGljIGdldFN0b3JhZ2VJZCAoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RvcmFnZUlkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7YW55W119IGFyZ3NcbiAgICAgKi9cbiAgICBwdWJsaWMgaW5pdGlhbGl6ZSAoLi4uYXJnczogYW55W10pOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zdG9yYWdlID0gbmV3IE1hcCA8c3RyaW5nIHwgbnVtYmVyLCBUPigpO1xuICAgICAgICB0aGlzLnN0b3JhZ2VJZCA9IHRoaXMucmFuZG9tR2VuZXJhdG9yLmdldFJhbmRvbVN0cmluZyg2KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3RoaXN9IHN0b3JhZ2VcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IG1lcmdlSWRcbiAgICAgKi9cbiAgICBwdWJsaWMgbWVyZ2VXaXRoIChzdG9yYWdlOiB0aGlzLCBtZXJnZUlkOiBib29sZWFuID0gZmFsc2UpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zdG9yYWdlID0gbmV3IE1hcCA8c3RyaW5nIHwgbnVtYmVyLCBUPihbLi4udGhpcy5zdG9yYWdlLCAuLi5zdG9yYWdlLmdldFN0b3JhZ2UoKV0pO1xuXG4gICAgICAgIGlmIChtZXJnZUlkKSB7XG4gICAgICAgICAgICB0aGlzLnN0b3JhZ2VJZCA9IHN0b3JhZ2UuZ2V0U3RvcmFnZUlkKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZyB8IG51bWJlcn0ga2V5XG4gICAgICogQHBhcmFtIHtUfSB2YWx1ZVxuICAgICAqL1xuICAgIHB1YmxpYyBzZXQgKGtleTogc3RyaW5nIHwgbnVtYmVyLCB2YWx1ZTogVCk6IHZvaWQge1xuICAgICAgICB0aGlzLnN0b3JhZ2Uuc2V0KGtleSwgdmFsdWUpO1xuICAgIH1cbn1cbiJdfQ==