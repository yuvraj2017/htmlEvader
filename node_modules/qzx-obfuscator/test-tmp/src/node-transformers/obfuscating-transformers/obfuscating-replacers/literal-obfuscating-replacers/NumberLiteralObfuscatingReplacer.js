"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var inversify_1 = require("inversify");
var ServiceIdentifiers_1 = require("../../../../container/ServiceIdentifiers");
var AbstractObfuscatingReplacer_1 = require("../AbstractObfuscatingReplacer");
var Nodes_1 = require("../../../../node/Nodes");
var Utils_1 = require("../../../../utils/Utils");
var NumberLiteralObfuscatingReplacer = function (_AbstractObfuscatingR) {
    _inherits(NumberLiteralObfuscatingReplacer, _AbstractObfuscatingR);

    function NumberLiteralObfuscatingReplacer(options) {
        _classCallCheck(this, NumberLiteralObfuscatingReplacer);

        var _this = _possibleConstructorReturn(this, (NumberLiteralObfuscatingReplacer.__proto__ || Object.getPrototypeOf(NumberLiteralObfuscatingReplacer)).call(this, options));

        _this.numberLiteralCache = new Map();
        return _this;
    }

    _createClass(NumberLiteralObfuscatingReplacer, [{
        key: "replace",
        value: function replace(nodeValue) {
            var rawValue = void 0;
            if (this.numberLiteralCache.has(nodeValue)) {
                rawValue = this.numberLiteralCache.get(nodeValue);
            } else {
                if (!Utils_1.Utils.isCeilNumber(nodeValue)) {
                    rawValue = String(nodeValue);
                } else {
                    rawValue = "" + Utils_1.Utils.hexadecimalPrefix + Utils_1.Utils.decToHex(nodeValue);
                }
                this.numberLiteralCache.set(nodeValue, rawValue);
            }
            return Nodes_1.Nodes.getLiteralNode(nodeValue, rawValue);
        }
    }]);

    return NumberLiteralObfuscatingReplacer;
}(AbstractObfuscatingReplacer_1.AbstractObfuscatingReplacer);
NumberLiteralObfuscatingReplacer = tslib_1.__decorate([inversify_1.injectable(), tslib_1.__param(0, inversify_1.inject(ServiceIdentifiers_1.ServiceIdentifiers.IOptions)), tslib_1.__metadata("design:paramtypes", [Object])], NumberLiteralObfuscatingReplacer);
exports.NumberLiteralObfuscatingReplacer = NumberLiteralObfuscatingReplacer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTnVtYmVyTGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbm9kZS10cmFuc2Zvcm1lcnMvb2JmdXNjYXRpbmctdHJhbnNmb3JtZXJzL29iZnVzY2F0aW5nLXJlcGxhY2Vycy9saXRlcmFsLW9iZnVzY2F0aW5nLXJlcGxhY2Vycy9OdW1iZXJMaXRlcmFsT2JmdXNjYXRpbmdSZXBsYWNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSwwQkFBK0M7QUFDL0MsbUNBQThFO0FBTTlFLDRDQUE2RTtBQUM3RSxzQkFBK0M7QUFDL0Msc0JBQWdEO0FBR2hEO0FBQUEsQUFBYSxBQUFnQyxBQUFDOztBQVMxQyw4Q0FDeUMsQUFBaUI7QUFFdEQsQUFBSzs7d0tBQUMsQUFBTyxBQUFDLEFBQUM7O0FBUkYsY0FBa0IscUJBQXlCLElBQUksQUFBRyxBQUFFLEFBQUMsQUFTdEU7O0FBQUMsQUFNTSxBQUFPOzs7O2dDQUFFLEFBQWlCO0FBQzdCLGdCQUFJLEFBQWdCLEFBQUM7QUFFckIsQUFBRSxBQUFDLGdCQUFDLEFBQUksS0FBQyxBQUFrQixtQkFBQyxBQUFHLElBQUMsQUFBUyxBQUFDLEFBQUMsWUFBQyxBQUFDO0FBQ3pDLEFBQVEsMkJBQVcsQUFBSSxLQUFDLEFBQWtCLG1CQUFDLEFBQUcsSUFBQyxBQUFTLEFBQUMsQUFBQyxBQUM5RDtBQUFDLEFBQUMsQUFBSSxtQkFBQyxBQUFDO0FBQ0osQUFBRSxBQUFDLG9CQUFDLENBQUMsUUFBSyxNQUFDLEFBQVksYUFBQyxBQUFTLEFBQUMsQUFBQyxZQUFDLEFBQUM7QUFDakMsQUFBUSwrQkFBRyxBQUFNLE9BQUMsQUFBUyxBQUFDLEFBQUMsQUFDakM7QUFBQyxBQUFDLEFBQUksdUJBQUMsQUFBQztBQUNKLEFBQVEsQUFBRyxvQ0FBRyxRQUFLLE1BQUMsQUFBaUIsb0JBQUcsUUFBSyxNQUFDLEFBQVEsU0FBQyxBQUFTLEFBQUMsQUFBRSxBQUFDLEFBQ3hFO0FBQUM7QUFFRCxBQUFJLHFCQUFDLEFBQWtCLG1CQUFDLEFBQUcsSUFBQyxBQUFTLFdBQUUsQUFBUSxBQUFDLEFBQUMsQUFDckQ7QUFBQztBQUVELEFBQU0sbUJBQUMsUUFBSyxNQUFDLEFBQWMsZUFBQyxBQUFTLFdBQUUsQUFBUSxBQUFDLEFBQUMsQUFDckQ7QUFBQyxBQUNKOzs7O0VBcENxRCw4QkFBMkI7QUFBcEUsQUFBZ0MsdURBRDVDLFlBQVUsQUFBRSxjQVdKLG1CQUFBLFlBQU0sT0FBQyxxQkFBa0IsbUJBQUMsQUFBUSxBQUFDLGdFQVYvQixBQUFnQyxBQW9DNUM7QUFwQ1ksMkNBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5qZWN0YWJsZSwgaW5qZWN0IH0gZnJvbSAnaW52ZXJzaWZ5JztcbmltcG9ydCB7IFNlcnZpY2VJZGVudGlmaWVycyB9IGZyb20gJy4uLy4uLy4uLy4uL2NvbnRhaW5lci9TZXJ2aWNlSWRlbnRpZmllcnMnO1xuXG5pbXBvcnQgKiBhcyBFU1RyZWUgZnJvbSAnZXN0cmVlJztcblxuaW1wb3J0IHsgSU9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9pbnRlcmZhY2VzL29wdGlvbnMvSU9wdGlvbnMnO1xuXG5pbXBvcnQgeyBBYnN0cmFjdE9iZnVzY2F0aW5nUmVwbGFjZXIgfSBmcm9tICcuLi9BYnN0cmFjdE9iZnVzY2F0aW5nUmVwbGFjZXInO1xuaW1wb3J0IHsgTm9kZXMgfSBmcm9tICcuLi8uLi8uLi8uLi9ub2RlL05vZGVzJztcbmltcG9ydCB7IFV0aWxzIH0gZnJvbSAnLi4vLi4vLi4vLi4vdXRpbHMvVXRpbHMnO1xuXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTnVtYmVyTGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXIgZXh0ZW5kcyBBYnN0cmFjdE9iZnVzY2F0aW5nUmVwbGFjZXIge1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHtNYXA8c3RyaW5nLCBzdHJpbmc+fVxuICAgICAqL1xuICAgIHByaXZhdGUgcmVhZG9ubHkgbnVtYmVyTGl0ZXJhbENhY2hlOiBNYXAgPG51bWJlciwgc3RyaW5nPiA9IG5ldyBNYXAoKTtcblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7SU9wdGlvbnN9IG9wdGlvbnNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvciAoXG4gICAgICAgIEBpbmplY3QoU2VydmljZUlkZW50aWZpZXJzLklPcHRpb25zKSBvcHRpb25zOiBJT3B0aW9uc1xuICAgICkge1xuICAgICAgICBzdXBlcihvcHRpb25zKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbm9kZVZhbHVlXG4gICAgICogQHJldHVybnMge05vZGV9XG4gICAgICovXG4gICAgcHVibGljIHJlcGxhY2UgKG5vZGVWYWx1ZTogbnVtYmVyKTogRVNUcmVlLk5vZGUge1xuICAgICAgICBsZXQgcmF3VmFsdWU6IHN0cmluZztcblxuICAgICAgICBpZiAodGhpcy5udW1iZXJMaXRlcmFsQ2FjaGUuaGFzKG5vZGVWYWx1ZSkpIHtcbiAgICAgICAgICAgIHJhd1ZhbHVlID0gPHN0cmluZz50aGlzLm51bWJlckxpdGVyYWxDYWNoZS5nZXQobm9kZVZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICghVXRpbHMuaXNDZWlsTnVtYmVyKG5vZGVWYWx1ZSkpIHtcbiAgICAgICAgICAgICAgICByYXdWYWx1ZSA9IFN0cmluZyhub2RlVmFsdWUpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByYXdWYWx1ZSA9IGAke1V0aWxzLmhleGFkZWNpbWFsUHJlZml4fSR7VXRpbHMuZGVjVG9IZXgobm9kZVZhbHVlKX1gO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLm51bWJlckxpdGVyYWxDYWNoZS5zZXQobm9kZVZhbHVlLCByYXdWYWx1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gTm9kZXMuZ2V0TGl0ZXJhbE5vZGUobm9kZVZhbHVlLCByYXdWYWx1ZSk7XG4gICAgfVxufVxuIl19