"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var inversify_1 = require("inversify");
var ServiceIdentifiers_1 = require("../../../container/ServiceIdentifiers");
var Initializable_1 = require("../../../decorators/Initializable");
var AbstractCustomNode_1 = require("../../AbstractCustomNode");
var Nodes_1 = require("../../../node/Nodes");
var NodeUtils_1 = require("../../../node/NodeUtils");
var StringLiteralControlFlowStorageCallNode = function (_AbstractCustomNode_) {
    _inherits(StringLiteralControlFlowStorageCallNode, _AbstractCustomNode_);

    function StringLiteralControlFlowStorageCallNode(randomGenerator, options) {
        _classCallCheck(this, StringLiteralControlFlowStorageCallNode);

        var _this = _possibleConstructorReturn(this, (StringLiteralControlFlowStorageCallNode.__proto__ || Object.getPrototypeOf(StringLiteralControlFlowStorageCallNode)).call(this, options));

        _this.randomGenerator = randomGenerator;
        return _this;
    }

    _createClass(StringLiteralControlFlowStorageCallNode, [{
        key: "initialize",
        value: function initialize(controlFlowStorageName, controlFlowStorageKey) {
            this.controlFlowStorageName = controlFlowStorageName;
            this.controlFlowStorageKey = controlFlowStorageKey;
        }
    }, {
        key: "getNodeStructure",
        value: function getNodeStructure() {
            var structure = Nodes_1.Nodes.getExpressionStatementNode(Nodes_1.Nodes.getMemberExpressionNode(Nodes_1.Nodes.getIdentifierNode(this.controlFlowStorageName), Nodes_1.Nodes.getIdentifierNode(this.controlFlowStorageKey)));
            NodeUtils_1.NodeUtils.parentize(structure);
            return [structure];
        }
    }]);

    return StringLiteralControlFlowStorageCallNode;
}(AbstractCustomNode_1.AbstractCustomNode);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", String)], StringLiteralControlFlowStorageCallNode.prototype, "controlFlowStorageKey", void 0);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", String)], StringLiteralControlFlowStorageCallNode.prototype, "controlFlowStorageName", void 0);
StringLiteralControlFlowStorageCallNode = tslib_1.__decorate([inversify_1.injectable(), tslib_1.__param(0, inversify_1.inject(ServiceIdentifiers_1.ServiceIdentifiers.IRandomGenerator)), tslib_1.__param(1, inversify_1.inject(ServiceIdentifiers_1.ServiceIdentifiers.IOptions)), tslib_1.__metadata("design:paramtypes", [Object, Object])], StringLiteralControlFlowStorageCallNode);
exports.StringLiteralControlFlowStorageCallNode = StringLiteralControlFlowStorageCallNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RyaW5nTGl0ZXJhbENvbnRyb2xGbG93U3RvcmFnZUNhbGxOb2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2N1c3RvbS1ub2Rlcy9jb250cm9sLWZsb3ctZmxhdHRlbmluZy1ub2Rlcy9jb250cm9sLWZsb3ctc3RvcmFnZS1ub2Rlcy9TdHJpbmdMaXRlcmFsQ29udHJvbEZsb3dTdG9yYWdlQ2FsbE5vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsMEJBQStDO0FBQy9DLG1DQUEyRTtBQU8zRSw4QkFBa0U7QUFFbEUsbUNBQThEO0FBQzlELHNCQUE0QztBQUM1QywwQkFBb0Q7QUFHcEQ7QUFBQSxBQUFhLEFBQXVDLEFBQUM7O0FBc0JqRCxxREFDaUQsQUFBaUMsaUJBQ3pDLEFBQWlCO0FBRXRELEFBQUs7O3NMQUFDLEFBQU8sQUFBQyxBQUFDOztBQUVmLEFBQUksY0FBQyxBQUFlLGtCQUFHLEFBQWUsQUFBQyxBQUMzQzs7QUFBQyxBQU1NLEFBQVU7Ozs7bUNBQ2IsQUFBOEIsd0JBQzlCLEFBQTZCO0FBRTdCLEFBQUksaUJBQUMsQUFBc0IseUJBQUcsQUFBc0IsQUFBQztBQUNyRCxBQUFJLGlCQUFDLEFBQXFCLHdCQUFHLEFBQXFCLEFBQUMsQUFDdkQ7QUFBQyxBQUVTLEFBQWdCOzs7O0FBQ3RCLGdCQUFNLEFBQVMsWUFBZSxRQUFLLE1BQUMsQUFBMEIsMkJBQzFELFFBQUssTUFBQyxBQUF1Qix3QkFDekIsUUFBSyxNQUFDLEFBQWlCLGtCQUFDLEFBQUksS0FBQyxBQUFzQixBQUFDLHlCQUNwRCxRQUFLLE1BQUMsQUFBaUIsa0JBQUMsQUFBSSxLQUFDLEFBQXFCLEFBQUMsQUFDdEQsQUFDSixBQUFDO0FBRUYsd0JBQVMsVUFBQyxBQUFTLFVBQUMsQUFBUyxBQUFDLEFBQUM7QUFFL0IsQUFBTSxtQkFBQyxDQUFDLEFBQVMsQUFBQyxBQUFDLEFBQ3ZCO0FBQUMsQUFDSjs7OztFQXZENEQscUJBQWtCO0FBSzNFLG9CQURDLGdCQUFhLEFBQUUsOElBQ3NCO0FBTXRDLG9CQURDLGdCQUFhLEFBQUUsK0lBQ3VCO0FBWDlCLEFBQXVDLDhEQURuRCxZQUFVLEFBQUUsY0F3QkosbUJBQUEsWUFBTSxPQUFDLHFCQUFrQixtQkFBQyxBQUFnQixBQUFDLG9CQUMzQyxtQkFBQSxZQUFNLE9BQUMscUJBQWtCLG1CQUFDLEFBQVEsQUFBQyx3RUF4Qi9CLEFBQXVDLEFBdURuRDtBQXZEWSxrREFBdUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbmplY3RhYmxlLCBpbmplY3QgfSBmcm9tICdpbnZlcnNpZnknO1xuaW1wb3J0IHsgU2VydmljZUlkZW50aWZpZXJzIH0gZnJvbSAnLi4vLi4vLi4vY29udGFpbmVyL1NlcnZpY2VJZGVudGlmaWVycyc7XG5cbmltcG9ydCB7IFRTdGF0ZW1lbnQgfSBmcm9tICcuLi8uLi8uLi90eXBlcy9ub2RlL1RTdGF0ZW1lbnQnO1xuXG5pbXBvcnQgeyBJT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2ludGVyZmFjZXMvb3B0aW9ucy9JT3B0aW9ucyc7XG5pbXBvcnQgeyBJUmFuZG9tR2VuZXJhdG9yIH0gZnJvbSAnLi4vLi4vLi4vaW50ZXJmYWNlcy91dGlscy9JUmFuZG9tR2VuZXJhdG9yJztcblxuaW1wb3J0IHsgaW5pdGlhbGl6YWJsZSB9IGZyb20gJy4uLy4uLy4uL2RlY29yYXRvcnMvSW5pdGlhbGl6YWJsZSc7XG5cbmltcG9ydCB7IEFic3RyYWN0Q3VzdG9tTm9kZSB9IGZyb20gJy4uLy4uL0Fic3RyYWN0Q3VzdG9tTm9kZSc7XG5pbXBvcnQgeyBOb2RlcyB9IGZyb20gJy4uLy4uLy4uL25vZGUvTm9kZXMnO1xuaW1wb3J0IHsgTm9kZVV0aWxzIH0gZnJvbSAnLi4vLi4vLi4vbm9kZS9Ob2RlVXRpbHMnO1xuXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU3RyaW5nTGl0ZXJhbENvbnRyb2xGbG93U3RvcmFnZUNhbGxOb2RlIGV4dGVuZHMgQWJzdHJhY3RDdXN0b21Ob2RlIHtcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIEBpbml0aWFsaXphYmxlKClcbiAgICBwcml2YXRlIGNvbnRyb2xGbG93U3RvcmFnZUtleTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBAaW5pdGlhbGl6YWJsZSgpXG4gICAgcHJpdmF0ZSBjb250cm9sRmxvd1N0b3JhZ2VOYW1lOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBAdHlwZSB7SVJhbmRvbUdlbmVyYXRvcn1cbiAgICAgKi9cbiAgICBwcml2YXRlIHJlYWRvbmx5IHJhbmRvbUdlbmVyYXRvcjogSVJhbmRvbUdlbmVyYXRvcjtcblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7SVJhbmRvbUdlbmVyYXRvcn0gcmFuZG9tR2VuZXJhdG9yXG4gICAgICogQHBhcmFtIHtJT3B0aW9uc30gb3B0aW9uc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yIChcbiAgICAgICAgQGluamVjdChTZXJ2aWNlSWRlbnRpZmllcnMuSVJhbmRvbUdlbmVyYXRvcikgcmFuZG9tR2VuZXJhdG9yOiBJUmFuZG9tR2VuZXJhdG9yLFxuICAgICAgICBAaW5qZWN0KFNlcnZpY2VJZGVudGlmaWVycy5JT3B0aW9ucykgb3B0aW9uczogSU9wdGlvbnNcbiAgICApIHtcbiAgICAgICAgc3VwZXIob3B0aW9ucyk7XG5cbiAgICAgICAgdGhpcy5yYW5kb21HZW5lcmF0b3IgPSByYW5kb21HZW5lcmF0b3I7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRyb2xGbG93U3RvcmFnZU5hbWVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udHJvbEZsb3dTdG9yYWdlS2V5XG4gICAgICovXG4gICAgcHVibGljIGluaXRpYWxpemUgKFxuICAgICAgICBjb250cm9sRmxvd1N0b3JhZ2VOYW1lOiBzdHJpbmcsXG4gICAgICAgIGNvbnRyb2xGbG93U3RvcmFnZUtleTogc3RyaW5nXG4gICAgKTogdm9pZCB7XG4gICAgICAgIHRoaXMuY29udHJvbEZsb3dTdG9yYWdlTmFtZSA9IGNvbnRyb2xGbG93U3RvcmFnZU5hbWU7XG4gICAgICAgIHRoaXMuY29udHJvbEZsb3dTdG9yYWdlS2V5ID0gY29udHJvbEZsb3dTdG9yYWdlS2V5O1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBnZXROb2RlU3RydWN0dXJlICgpOiBUU3RhdGVtZW50W10ge1xuICAgICAgICBjb25zdCBzdHJ1Y3R1cmU6IFRTdGF0ZW1lbnQgPSBOb2Rlcy5nZXRFeHByZXNzaW9uU3RhdGVtZW50Tm9kZShcbiAgICAgICAgICAgIE5vZGVzLmdldE1lbWJlckV4cHJlc3Npb25Ob2RlKFxuICAgICAgICAgICAgICAgIE5vZGVzLmdldElkZW50aWZpZXJOb2RlKHRoaXMuY29udHJvbEZsb3dTdG9yYWdlTmFtZSksXG4gICAgICAgICAgICAgICAgTm9kZXMuZ2V0SWRlbnRpZmllck5vZGUodGhpcy5jb250cm9sRmxvd1N0b3JhZ2VLZXkpXG4gICAgICAgICAgICApXG4gICAgICAgICk7XG5cbiAgICAgICAgTm9kZVV0aWxzLnBhcmVudGl6ZShzdHJ1Y3R1cmUpO1xuXG4gICAgICAgIHJldHVybiBbc3RydWN0dXJlXTtcbiAgICB9XG59XG4iXX0=