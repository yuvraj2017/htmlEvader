"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var inversify_1 = require("inversify");
var ServiceIdentifiers_1 = require("../../../container/ServiceIdentifiers");
var Initializable_1 = require("../../../decorators/Initializable");
var AbstractCustomNode_1 = require("../../AbstractCustomNode");
var Nodes_1 = require("../../../node/Nodes");
var NodeUtils_1 = require("../../../node/NodeUtils");
var ExpressionWithOperatorControlFlowStorageCallNode = function (_AbstractCustomNode_) {
    _inherits(ExpressionWithOperatorControlFlowStorageCallNode, _AbstractCustomNode_);

    function ExpressionWithOperatorControlFlowStorageCallNode(randomGenerator, options) {
        _classCallCheck(this, ExpressionWithOperatorControlFlowStorageCallNode);

        var _this = _possibleConstructorReturn(this, (ExpressionWithOperatorControlFlowStorageCallNode.__proto__ || Object.getPrototypeOf(ExpressionWithOperatorControlFlowStorageCallNode)).call(this, options));

        _this.randomGenerator = randomGenerator;
        return _this;
    }

    _createClass(ExpressionWithOperatorControlFlowStorageCallNode, [{
        key: "initialize",
        value: function initialize(controlFlowStorageName, controlFlowStorageKey, leftValue, rightValue) {
            this.controlFlowStorageName = controlFlowStorageName;
            this.controlFlowStorageKey = controlFlowStorageKey;
            this.leftValue = leftValue;
            this.rightValue = rightValue;
        }
    }, {
        key: "getNodeStructure",
        value: function getNodeStructure() {
            var structure = Nodes_1.Nodes.getExpressionStatementNode(Nodes_1.Nodes.getCallExpressionNode(Nodes_1.Nodes.getMemberExpressionNode(Nodes_1.Nodes.getIdentifierNode(this.controlFlowStorageName), Nodes_1.Nodes.getIdentifierNode(this.controlFlowStorageKey)), [this.leftValue, this.rightValue]));
            NodeUtils_1.NodeUtils.parentize(structure);
            return [structure];
        }
    }]);

    return ExpressionWithOperatorControlFlowStorageCallNode;
}(AbstractCustomNode_1.AbstractCustomNode);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", String)], ExpressionWithOperatorControlFlowStorageCallNode.prototype, "controlFlowStorageKey", void 0);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", String)], ExpressionWithOperatorControlFlowStorageCallNode.prototype, "controlFlowStorageName", void 0);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", Object)], ExpressionWithOperatorControlFlowStorageCallNode.prototype, "leftValue", void 0);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", Object)], ExpressionWithOperatorControlFlowStorageCallNode.prototype, "rightValue", void 0);
ExpressionWithOperatorControlFlowStorageCallNode = tslib_1.__decorate([inversify_1.injectable(), tslib_1.__param(0, inversify_1.inject(ServiceIdentifiers_1.ServiceIdentifiers.IRandomGenerator)), tslib_1.__param(1, inversify_1.inject(ServiceIdentifiers_1.ServiceIdentifiers.IOptions)), tslib_1.__metadata("design:paramtypes", [Object, Object])], ExpressionWithOperatorControlFlowStorageCallNode);
exports.ExpressionWithOperatorControlFlowStorageCallNode = ExpressionWithOperatorControlFlowStorageCallNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhwcmVzc2lvbldpdGhPcGVyYXRvckNvbnRyb2xGbG93U3RvcmFnZUNhbGxOb2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2N1c3RvbS1ub2Rlcy9jb250cm9sLWZsb3ctZmxhdHRlbmluZy1ub2Rlcy9jb250cm9sLWZsb3ctc3RvcmFnZS1ub2Rlcy9FeHByZXNzaW9uV2l0aE9wZXJhdG9yQ29udHJvbEZsb3dTdG9yYWdlQ2FsbE5vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsMEJBQStDO0FBQy9DLG1DQUEyRTtBQVMzRSw4QkFBa0U7QUFFbEUsbUNBQThEO0FBQzlELHNCQUE0QztBQUM1QywwQkFBb0Q7QUFHcEQ7QUFBQSxBQUFhLEFBQWdELEFBQUM7O0FBa0MxRCw4REFDaUQsQUFBaUMsaUJBQ3pDLEFBQWlCO0FBRXRELEFBQUs7O3dNQUFDLEFBQU8sQUFBQyxBQUFDOztBQUVmLEFBQUksY0FBQyxBQUFlLGtCQUFHLEFBQWUsQUFBQyxBQUMzQzs7QUFBQyxBQVFNLEFBQVU7Ozs7bUNBQ2IsQUFBOEIsd0JBQzlCLEFBQTZCLHVCQUM3QixBQUFxQixXQUNyQixBQUFzQjtBQUV0QixBQUFJLGlCQUFDLEFBQXNCLHlCQUFHLEFBQXNCLEFBQUM7QUFDckQsQUFBSSxpQkFBQyxBQUFxQix3QkFBRyxBQUFxQixBQUFDO0FBQ25ELEFBQUksaUJBQUMsQUFBUyxZQUFHLEFBQVMsQUFBQztBQUMzQixBQUFJLGlCQUFDLEFBQVUsYUFBRyxBQUFVLEFBQUMsQUFDakM7QUFBQyxBQUVTLEFBQWdCOzs7O0FBQ3RCLGdCQUFNLEFBQVMsWUFBZSxRQUFLLE1BQUMsQUFBMEIsMkJBQzFELFFBQUssTUFBQyxBQUFxQixzQkFDdkIsUUFBSyxNQUFDLEFBQXVCLHdCQUN6QixRQUFLLE1BQUMsQUFBaUIsa0JBQUMsQUFBSSxLQUFDLEFBQXNCLEFBQUMseUJBQ3BELFFBQUssTUFBQyxBQUFpQixrQkFBQyxBQUFJLEtBQUMsQUFBcUIsQUFBQyxBQUN0RCx5QkFDRCxDQUNJLEFBQUksS0FBQyxBQUFTLFdBQ2QsQUFBSSxLQUFDLEFBQVUsQUFDbEIsQUFDSixBQUNKLEFBQUM7QUFFRix3QkFBUyxVQUFDLEFBQVMsVUFBQyxBQUFTLEFBQUMsQUFBQztBQUUvQixBQUFNLG1CQUFDLENBQUMsQUFBUyxBQUFDLEFBQUMsQUFDdkI7QUFBQyxBQUNKOzs7O0VBL0VxRSxxQkFBa0I7QUFLcEYsb0JBREMsZ0JBQWEsQUFBRSx1SkFDc0I7QUFNdEMsb0JBREMsZ0JBQWEsQUFBRSx3SkFDdUI7QUFNdkMsb0JBREMsZ0JBQWEsQUFBRSwySUFDYztBQVc5QixvQkFEQyxnQkFBYSxBQUFFLDRJQUNlO0FBNUJ0QixBQUFnRCx1RUFENUQsWUFBVSxBQUFFLGNBb0NKLG1CQUFBLFlBQU0sT0FBQyxxQkFBa0IsbUJBQUMsQUFBZ0IsQUFBQyxvQkFDM0MsbUJBQUEsWUFBTSxPQUFDLHFCQUFrQixtQkFBQyxBQUFRLEFBQUMsd0VBcEMvQixBQUFnRCxBQStFNUQ7QUEvRVksMkRBQWdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5qZWN0YWJsZSwgaW5qZWN0IH0gZnJvbSAnaW52ZXJzaWZ5JztcbmltcG9ydCB7IFNlcnZpY2VJZGVudGlmaWVycyB9IGZyb20gJy4uLy4uLy4uL2NvbnRhaW5lci9TZXJ2aWNlSWRlbnRpZmllcnMnO1xuXG5pbXBvcnQgeyBFeHByZXNzaW9uIH0gZnJvbSAnZXN0cmVlJztcblxuaW1wb3J0IHsgVFN0YXRlbWVudCB9IGZyb20gJy4uLy4uLy4uL3R5cGVzL25vZGUvVFN0YXRlbWVudCc7XG5cbmltcG9ydCB7IElPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vaW50ZXJmYWNlcy9vcHRpb25zL0lPcHRpb25zJztcbmltcG9ydCB7IElSYW5kb21HZW5lcmF0b3IgfSBmcm9tICcuLi8uLi8uLi9pbnRlcmZhY2VzL3V0aWxzL0lSYW5kb21HZW5lcmF0b3InO1xuXG5pbXBvcnQgeyBpbml0aWFsaXphYmxlIH0gZnJvbSAnLi4vLi4vLi4vZGVjb3JhdG9ycy9Jbml0aWFsaXphYmxlJztcblxuaW1wb3J0IHsgQWJzdHJhY3RDdXN0b21Ob2RlIH0gZnJvbSAnLi4vLi4vQWJzdHJhY3RDdXN0b21Ob2RlJztcbmltcG9ydCB7IE5vZGVzIH0gZnJvbSAnLi4vLi4vLi4vbm9kZS9Ob2Rlcyc7XG5pbXBvcnQgeyBOb2RlVXRpbHMgfSBmcm9tICcuLi8uLi8uLi9ub2RlL05vZGVVdGlscyc7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBFeHByZXNzaW9uV2l0aE9wZXJhdG9yQ29udHJvbEZsb3dTdG9yYWdlQ2FsbE5vZGUgZXh0ZW5kcyBBYnN0cmFjdEN1c3RvbU5vZGUge1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgQGluaXRpYWxpemFibGUoKVxuICAgIHByaXZhdGUgY29udHJvbEZsb3dTdG9yYWdlS2V5OiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIEBpbml0aWFsaXphYmxlKClcbiAgICBwcml2YXRlIGNvbnRyb2xGbG93U3RvcmFnZU5hbWU6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtFeHByZXNzaW9ufVxuICAgICAqL1xuICAgIEBpbml0aWFsaXphYmxlKClcbiAgICBwcml2YXRlIGxlZnRWYWx1ZTogRXhwcmVzc2lvbjtcblxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtJUmFuZG9tR2VuZXJhdG9yfVxuICAgICAqL1xuICAgIHByaXZhdGUgcmVhZG9ubHkgcmFuZG9tR2VuZXJhdG9yOiBJUmFuZG9tR2VuZXJhdG9yO1xuXG4gICAgLyoqXG4gICAgICogQHR5cGUge0VTVHJlZS5FeHByZXNzaW9ufVxuICAgICAqL1xuICAgIEBpbml0aWFsaXphYmxlKClcbiAgICBwcml2YXRlIHJpZ2h0VmFsdWU6IEV4cHJlc3Npb247XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0lSYW5kb21HZW5lcmF0b3J9IHJhbmRvbUdlbmVyYXRvclxuICAgICAqIEBwYXJhbSB7SU9wdGlvbnN9IG9wdGlvbnNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvciAoXG4gICAgICAgIEBpbmplY3QoU2VydmljZUlkZW50aWZpZXJzLklSYW5kb21HZW5lcmF0b3IpIHJhbmRvbUdlbmVyYXRvcjogSVJhbmRvbUdlbmVyYXRvcixcbiAgICAgICAgQGluamVjdChTZXJ2aWNlSWRlbnRpZmllcnMuSU9wdGlvbnMpIG9wdGlvbnM6IElPcHRpb25zXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xuXG4gICAgICAgIHRoaXMucmFuZG9tR2VuZXJhdG9yID0gcmFuZG9tR2VuZXJhdG9yO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb250cm9sRmxvd1N0b3JhZ2VOYW1lXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRyb2xGbG93U3RvcmFnZUtleVxuICAgICAqIEBwYXJhbSB7RXhwcmVzc2lvbn0gbGVmdFZhbHVlXG4gICAgICogQHBhcmFtIHtFeHByZXNzaW9ufSByaWdodFZhbHVlXG4gICAgICovXG4gICAgcHVibGljIGluaXRpYWxpemUgKFxuICAgICAgICBjb250cm9sRmxvd1N0b3JhZ2VOYW1lOiBzdHJpbmcsXG4gICAgICAgIGNvbnRyb2xGbG93U3RvcmFnZUtleTogc3RyaW5nLFxuICAgICAgICBsZWZ0VmFsdWU6IEV4cHJlc3Npb24sXG4gICAgICAgIHJpZ2h0VmFsdWU6IEV4cHJlc3Npb24sXG4gICAgKTogdm9pZCB7XG4gICAgICAgIHRoaXMuY29udHJvbEZsb3dTdG9yYWdlTmFtZSA9IGNvbnRyb2xGbG93U3RvcmFnZU5hbWU7XG4gICAgICAgIHRoaXMuY29udHJvbEZsb3dTdG9yYWdlS2V5ID0gY29udHJvbEZsb3dTdG9yYWdlS2V5O1xuICAgICAgICB0aGlzLmxlZnRWYWx1ZSA9IGxlZnRWYWx1ZTtcbiAgICAgICAgdGhpcy5yaWdodFZhbHVlID0gcmlnaHRWYWx1ZTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgZ2V0Tm9kZVN0cnVjdHVyZSAoKTogVFN0YXRlbWVudFtdIHtcbiAgICAgICAgY29uc3Qgc3RydWN0dXJlOiBUU3RhdGVtZW50ID0gTm9kZXMuZ2V0RXhwcmVzc2lvblN0YXRlbWVudE5vZGUoXG4gICAgICAgICAgICBOb2Rlcy5nZXRDYWxsRXhwcmVzc2lvbk5vZGUoXG4gICAgICAgICAgICAgICAgTm9kZXMuZ2V0TWVtYmVyRXhwcmVzc2lvbk5vZGUoXG4gICAgICAgICAgICAgICAgICAgIE5vZGVzLmdldElkZW50aWZpZXJOb2RlKHRoaXMuY29udHJvbEZsb3dTdG9yYWdlTmFtZSksXG4gICAgICAgICAgICAgICAgICAgIE5vZGVzLmdldElkZW50aWZpZXJOb2RlKHRoaXMuY29udHJvbEZsb3dTdG9yYWdlS2V5KVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxlZnRWYWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yaWdodFZhbHVlXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgKVxuICAgICAgICApO1xuXG4gICAgICAgIE5vZGVVdGlscy5wYXJlbnRpemUoc3RydWN0dXJlKTtcblxuICAgICAgICByZXR1cm4gW3N0cnVjdHVyZV07XG4gICAgfVxufVxuIl19