"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var inversify_1 = require("inversify");
var ServiceIdentifiers_1 = require("../../container/ServiceIdentifiers");
var format = require("string-template");
var ObfuscationEvent_1 = require("../../enums/event-emitters/ObfuscationEvent");
var Initializable_1 = require("../../decorators/Initializable");
var SingleNodeCallControllerTemplate_1 = require("../../templates/custom-nodes/SingleNodeCallControllerTemplate");
var NoCustomNodes_1 = require("../../options/presets/NoCustomNodes");
var AbstractCustomNode_1 = require("../AbstractCustomNode");
var JavaScriptObfuscator_1 = require("../../JavaScriptObfuscator");
var NodeUtils_1 = require("../../node/NodeUtils");
var NodeCallsControllerFunctionNode = function (_AbstractCustomNode_) {
    _inherits(NodeCallsControllerFunctionNode, _AbstractCustomNode_);

    function NodeCallsControllerFunctionNode(options) {
        _classCallCheck(this, NodeCallsControllerFunctionNode);

        return _possibleConstructorReturn(this, (NodeCallsControllerFunctionNode.__proto__ || Object.getPrototypeOf(NodeCallsControllerFunctionNode)).call(this, options));
    }

    _createClass(NodeCallsControllerFunctionNode, [{
        key: "initialize",
        value: function initialize(appendEvent, callsControllerFunctionName) {
            this.appendEvent = appendEvent;
            this.callsControllerFunctionName = callsControllerFunctionName;
        }
    }, {
        key: "getNodeStructure",
        value: function getNodeStructure() {
            return NodeUtils_1.NodeUtils.convertCodeToStructure(this.getTemplate());
        }
    }, {
        key: "getTemplate",
        value: function getTemplate() {
            if (this.appendEvent === ObfuscationEvent_1.ObfuscationEvent.AfterObfuscation) {
                return JavaScriptObfuscator_1.JavaScriptObfuscator.obfuscate(format(SingleNodeCallControllerTemplate_1.SingleNodeCallControllerTemplate(), {
                    singleNodeCallControllerFunctionName: this.callsControllerFunctionName
                }), Object.assign({}, NoCustomNodes_1.NO_CUSTOM_NODES_PRESET, { seed: this.options.seed })).getObfuscatedCode();
            }
            return format(SingleNodeCallControllerTemplate_1.SingleNodeCallControllerTemplate(), {
                singleNodeCallControllerFunctionName: this.callsControllerFunctionName
            });
        }
    }]);

    return NodeCallsControllerFunctionNode;
}(AbstractCustomNode_1.AbstractCustomNode);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", String)], NodeCallsControllerFunctionNode.prototype, "callsControllerFunctionName", void 0);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", String)], NodeCallsControllerFunctionNode.prototype, "appendEvent", void 0);
NodeCallsControllerFunctionNode = tslib_1.__decorate([inversify_1.injectable(), tslib_1.__param(0, inversify_1.inject(ServiceIdentifiers_1.ServiceIdentifiers.IOptions)), tslib_1.__metadata("design:paramtypes", [Object])], NodeCallsControllerFunctionNode);
exports.NodeCallsControllerFunctionNode = NodeCallsControllerFunctionNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTm9kZUNhbGxzQ29udHJvbGxlckZ1bmN0aW9uTm9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jdXN0b20tbm9kZXMvbm9kZS1jYWxscy1jb250cm9sbGVyLW5vZGVzL05vZGVDYWxsc0NvbnRyb2xsZXJGdW5jdGlvbk5vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsMEJBQStDO0FBQy9DLG1DQUF3RTtBQUV4RSxxQkFBMEM7QUFNMUMsaUNBQStFO0FBRS9FLDhCQUErRDtBQUUvRCxpREFBaUg7QUFFakgsOEJBQTZFO0FBRTdFLG1DQUEyRDtBQUMzRCxxQ0FBa0U7QUFDbEUsMEJBQWlEO0FBR2pEO0FBQUEsQUFBYSxBQUErQixBQUFDOztBQWdCekMsNkNBQ3lDLEFBQWlCO0FBRXRELEFBQUs7O2lLQUFDLEFBQU8sQUFBQyxBQUFDLEFBQ25CO0FBQUMsQUFNTSxBQUFVOzs7O21DQUFFLEFBQTZCLGFBQUUsQUFBbUM7QUFDakYsQUFBSSxpQkFBQyxBQUFXLGNBQUcsQUFBVyxBQUFDO0FBQy9CLEFBQUksaUJBQUMsQUFBMkIsOEJBQUcsQUFBMkIsQUFBQyxBQUNuRTtBQUFDLEFBS1MsQUFBZ0I7Ozs7QUFDdEIsQUFBTSxtQkFBQyxZQUFTLFVBQUMsQUFBc0IsdUJBQUMsQUFBSSxLQUFDLEFBQVcsQUFBRSxBQUFDLEFBQUMsQUFDaEU7QUFBQyxBQUtTLEFBQVc7Ozs7QUFDakIsQUFBRSxBQUFDLGdCQUFDLEFBQUksS0FBQyxBQUFXLGdCQUFLLG1CQUFnQixpQkFBQyxBQUFnQixBQUFDLGtCQUFDLEFBQUM7QUFDekQsQUFBTSw4Q0FBcUIscUJBQUMsQUFBUyxpQkFDMUIsbUNBQWdDLEFBQUU7QUFDckMsQUFBb0MsMERBQUUsQUFBSSxLQUFDLEFBQTJCLEFBQ3pFLEFBQUM7QUFGeUMsaUJBQTNDLEFBQU0sQ0FESCxvQkFLSSxnQkFBc0IsMEJBQ3pCLEFBQUksTUFBRSxBQUFJLEtBQUMsQUFBTyxRQUFDLEFBQUksQUFFOUIsU0FBQyxBQUFpQixBQUFFLEFBQUMsQUFDMUI7QUFBQztBQUVELEFBQU0sMEJBQVEsbUNBQWdDLEFBQUU7QUFDNUMsQUFBb0Msc0RBQUUsQUFBSSxLQUFDLEFBQTJCLEFBQ3pFLEFBQUMsQUFBQyxBQUNQO0FBSHNELGFBQTNDLEFBQU07QUFHaEIsQUFDSjs7OztFQTFEb0QscUJBQWtCO0FBS25FLG9CQURDLGdCQUFhLEFBQUUsNElBQzhCO0FBTTlDLG9CQURDLGdCQUFhLEFBQUUsNEhBQ3NCO0FBWDdCLEFBQStCLHNEQUQzQyxZQUFVLEFBQUUsY0FrQkosbUJBQUEsWUFBTSxPQUFDLHFCQUFrQixtQkFBQyxBQUFRLEFBQUMsZ0VBakIvQixBQUErQixBQTBEM0M7QUExRFksMENBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5qZWN0YWJsZSwgaW5qZWN0IH0gZnJvbSAnaW52ZXJzaWZ5JztcbmltcG9ydCB7IFNlcnZpY2VJZGVudGlmaWVycyB9IGZyb20gJy4uLy4uL2NvbnRhaW5lci9TZXJ2aWNlSWRlbnRpZmllcnMnO1xuXG5pbXBvcnQgKiBhcyBmb3JtYXQgZnJvbSAnc3RyaW5nLXRlbXBsYXRlJztcblxuaW1wb3J0IHsgVFN0YXRlbWVudCB9IGZyb20gJy4uLy4uL3R5cGVzL25vZGUvVFN0YXRlbWVudCc7XG5cbmltcG9ydCB7IElPcHRpb25zIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9vcHRpb25zL0lPcHRpb25zJztcblxuaW1wb3J0IHsgT2JmdXNjYXRpb25FdmVudCB9IGZyb20gJy4uLy4uL2VudW1zL2V2ZW50LWVtaXR0ZXJzL09iZnVzY2F0aW9uRXZlbnQnO1xuXG5pbXBvcnQgeyBpbml0aWFsaXphYmxlIH0gZnJvbSAnLi4vLi4vZGVjb3JhdG9ycy9Jbml0aWFsaXphYmxlJztcblxuaW1wb3J0IHsgU2luZ2xlTm9kZUNhbGxDb250cm9sbGVyVGVtcGxhdGUgfSBmcm9tICcuLi8uLi90ZW1wbGF0ZXMvY3VzdG9tLW5vZGVzL1NpbmdsZU5vZGVDYWxsQ29udHJvbGxlclRlbXBsYXRlJztcblxuaW1wb3J0IHsgTk9fQ1VTVE9NX05PREVTX1BSRVNFVCB9IGZyb20gJy4uLy4uL29wdGlvbnMvcHJlc2V0cy9Ob0N1c3RvbU5vZGVzJztcblxuaW1wb3J0IHsgQWJzdHJhY3RDdXN0b21Ob2RlIH0gZnJvbSAnLi4vQWJzdHJhY3RDdXN0b21Ob2RlJztcbmltcG9ydCB7IEphdmFTY3JpcHRPYmZ1c2NhdG9yIH0gZnJvbSAnLi4vLi4vSmF2YVNjcmlwdE9iZnVzY2F0b3InO1xuaW1wb3J0IHsgTm9kZVV0aWxzIH0gZnJvbSAnLi4vLi4vbm9kZS9Ob2RlVXRpbHMnO1xuXG5AaW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTm9kZUNhbGxzQ29udHJvbGxlckZ1bmN0aW9uTm9kZSBleHRlbmRzIEFic3RyYWN0Q3VzdG9tTm9kZSB7XG4gICAgLyoqXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBAaW5pdGlhbGl6YWJsZSgpXG4gICAgcHJvdGVjdGVkIGNhbGxzQ29udHJvbGxlckZ1bmN0aW9uTmFtZTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQHR5cGUge09iZnVzY2F0aW9uRXZlbnR9XG4gICAgICovXG4gICAgQGluaXRpYWxpemFibGUoKVxuICAgIHByaXZhdGUgYXBwZW5kRXZlbnQ6IE9iZnVzY2F0aW9uRXZlbnQ7XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0lPcHRpb25zfSBvcHRpb25zXG4gICAgICovXG4gICAgY29uc3RydWN0b3IgKFxuICAgICAgICBAaW5qZWN0KFNlcnZpY2VJZGVudGlmaWVycy5JT3B0aW9ucykgb3B0aW9uczogSU9wdGlvbnNcbiAgICApIHtcbiAgICAgICAgc3VwZXIob3B0aW9ucyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtPYmZ1c2NhdGlvbkV2ZW50fSBhcHBlbmRFdmVudFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjYWxsc0NvbnRyb2xsZXJGdW5jdGlvbk5hbWVcbiAgICAgKi9cbiAgICBwdWJsaWMgaW5pdGlhbGl6ZSAoYXBwZW5kRXZlbnQ6IE9iZnVzY2F0aW9uRXZlbnQsIGNhbGxzQ29udHJvbGxlckZ1bmN0aW9uTmFtZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYXBwZW5kRXZlbnQgPSBhcHBlbmRFdmVudDtcbiAgICAgICAgdGhpcy5jYWxsc0NvbnRyb2xsZXJGdW5jdGlvbk5hbWUgPSBjYWxsc0NvbnRyb2xsZXJGdW5jdGlvbk5hbWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMge1RTdGF0ZW1lbnRbXX1cbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgZ2V0Tm9kZVN0cnVjdHVyZSAoKTogVFN0YXRlbWVudFtdIHtcbiAgICAgICAgcmV0dXJuIE5vZGVVdGlscy5jb252ZXJ0Q29kZVRvU3RydWN0dXJlKHRoaXMuZ2V0VGVtcGxhdGUoKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMge3N0cmluZ31cbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgZ2V0VGVtcGxhdGUgKCk6IHN0cmluZyB7XG4gICAgICAgIGlmICh0aGlzLmFwcGVuZEV2ZW50ID09PSBPYmZ1c2NhdGlvbkV2ZW50LkFmdGVyT2JmdXNjYXRpb24pIHtcbiAgICAgICAgICAgIHJldHVybiBKYXZhU2NyaXB0T2JmdXNjYXRvci5vYmZ1c2NhdGUoXG4gICAgICAgICAgICAgICAgZm9ybWF0KFNpbmdsZU5vZGVDYWxsQ29udHJvbGxlclRlbXBsYXRlKCksIHtcbiAgICAgICAgICAgICAgICAgICAgc2luZ2xlTm9kZUNhbGxDb250cm9sbGVyRnVuY3Rpb25OYW1lOiB0aGlzLmNhbGxzQ29udHJvbGxlckZ1bmN0aW9uTmFtZVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgLi4uTk9fQ1VTVE9NX05PREVTX1BSRVNFVCxcbiAgICAgICAgICAgICAgICAgICAgc2VlZDogdGhpcy5vcHRpb25zLnNlZWRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApLmdldE9iZnVzY2F0ZWRDb2RlKCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZm9ybWF0KFNpbmdsZU5vZGVDYWxsQ29udHJvbGxlclRlbXBsYXRlKCksIHtcbiAgICAgICAgICAgIHNpbmdsZU5vZGVDYWxsQ29udHJvbGxlckZ1bmN0aW9uTmFtZTogdGhpcy5jYWxsc0NvbnRyb2xsZXJGdW5jdGlvbk5hbWVcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19