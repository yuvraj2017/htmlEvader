"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var inversify_1 = require("inversify");
var ServiceIdentifiers_1 = require("../../container/ServiceIdentifiers");
var format = require("string-template");
var Initializable_1 = require("../../decorators/Initializable");
var DebugProtectionFunctionTemplate_1 = require("../../templates/custom-nodes/debug-protection-nodes/debug-protection-function-node/DebugProtectionFunctionTemplate");
var AbstractCustomNode_1 = require("../AbstractCustomNode");
var NodeUtils_1 = require("../../node/NodeUtils");
var DebugProtectionFunctionNode = function (_AbstractCustomNode_) {
    _inherits(DebugProtectionFunctionNode, _AbstractCustomNode_);

    function DebugProtectionFunctionNode(options) {
        _classCallCheck(this, DebugProtectionFunctionNode);

        return _possibleConstructorReturn(this, (DebugProtectionFunctionNode.__proto__ || Object.getPrototypeOf(DebugProtectionFunctionNode)).call(this, options));
    }

    _createClass(DebugProtectionFunctionNode, [{
        key: "initialize",
        value: function initialize(debugProtectionFunctionName) {
            this.debugProtectionFunctionName = debugProtectionFunctionName;
        }
    }, {
        key: "getNodeStructure",
        value: function getNodeStructure() {
            return NodeUtils_1.NodeUtils.convertCodeToStructure(this.getTemplate());
        }
    }, {
        key: "getTemplate",
        value: function getTemplate() {
            return format(DebugProtectionFunctionTemplate_1.DebugProtectionFunctionTemplate(), {
                debugProtectionFunctionName: this.debugProtectionFunctionName
            });
        }
    }]);

    return DebugProtectionFunctionNode;
}(AbstractCustomNode_1.AbstractCustomNode);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", String)], DebugProtectionFunctionNode.prototype, "debugProtectionFunctionName", void 0);
DebugProtectionFunctionNode = tslib_1.__decorate([inversify_1.injectable(), tslib_1.__param(0, inversify_1.inject(ServiceIdentifiers_1.ServiceIdentifiers.IOptions)), tslib_1.__metadata("design:paramtypes", [Object])], DebugProtectionFunctionNode);
exports.DebugProtectionFunctionNode = DebugProtectionFunctionNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVidWdQcm90ZWN0aW9uRnVuY3Rpb25Ob2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2N1c3RvbS1ub2Rlcy9kZWJ1Zy1wcm90ZWN0aW9uLW5vZGVzL0RlYnVnUHJvdGVjdGlvbkZ1bmN0aW9uTm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSwwQkFBK0M7QUFDL0MsbUNBQXdFO0FBRXhFLHFCQUEwQztBQU0xQyw4QkFBK0Q7QUFFL0QsZ0RBQXFLO0FBRXJLLG1DQUEyRDtBQUMzRCwwQkFBaUQ7QUFHakQ7QUFBQSxBQUFhLEFBQTJCLEFBQUM7O0FBVXJDLHlDQUN5QyxBQUFpQjtBQUV0RCxBQUFLOzt5SkFBQyxBQUFPLEFBQUMsQUFBQyxBQUNuQjtBQUFDLEFBS00sQUFBVTs7OzttQ0FBRSxBQUFtQztBQUNsRCxBQUFJLGlCQUFDLEFBQTJCLDhCQUFHLEFBQTJCLEFBQUMsQUFDbkU7QUFBQyxBQUtTLEFBQWdCOzs7O0FBQ3RCLEFBQU0sbUJBQUMsWUFBUyxVQUFDLEFBQXNCLHVCQUFDLEFBQUksS0FBQyxBQUFXLEFBQUUsQUFBQyxBQUFDLEFBQ2hFO0FBQUMsQUFLUyxBQUFXOzs7O0FBQ2pCLEFBQU0sMEJBQVEsa0NBQStCLEFBQUU7QUFDM0MsQUFBMkIsNkNBQUUsQUFBSSxLQUFDLEFBQTJCLEFBQ2hFLEFBQUMsQUFBQyxBQUNQO0FBSHFELGFBQTFDLEFBQU07QUFHaEIsQUFDSjs7OztFQXRDZ0QscUJBQWtCO0FBSy9ELG9CQURDLGdCQUFhLEFBQUUsd0lBQzRCO0FBTG5DLEFBQTJCLGtEQUR2QyxZQUFVLEFBQUUsY0FZSixtQkFBQSxZQUFNLE9BQUMscUJBQWtCLG1CQUFDLEFBQVEsQUFBQyxnRUFYL0IsQUFBMkIsQUFzQ3ZDO0FBdENZLHNDQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluamVjdGFibGUsIGluamVjdCB9IGZyb20gJ2ludmVyc2lmeSc7XG5pbXBvcnQgeyBTZXJ2aWNlSWRlbnRpZmllcnMgfSBmcm9tICcuLi8uLi9jb250YWluZXIvU2VydmljZUlkZW50aWZpZXJzJztcblxuaW1wb3J0ICogYXMgZm9ybWF0IGZyb20gJ3N0cmluZy10ZW1wbGF0ZSc7XG5cbmltcG9ydCB7IFRTdGF0ZW1lbnQgfSBmcm9tICcuLi8uLi90eXBlcy9ub2RlL1RTdGF0ZW1lbnQnO1xuXG5pbXBvcnQgeyBJT3B0aW9ucyB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvb3B0aW9ucy9JT3B0aW9ucyc7XG5cbmltcG9ydCB7IGluaXRpYWxpemFibGUgfSBmcm9tICcuLi8uLi9kZWNvcmF0b3JzL0luaXRpYWxpemFibGUnO1xuXG5pbXBvcnQgeyBEZWJ1Z1Byb3RlY3Rpb25GdW5jdGlvblRlbXBsYXRlIH0gZnJvbSAnLi4vLi4vdGVtcGxhdGVzL2N1c3RvbS1ub2Rlcy9kZWJ1Zy1wcm90ZWN0aW9uLW5vZGVzL2RlYnVnLXByb3RlY3Rpb24tZnVuY3Rpb24tbm9kZS9EZWJ1Z1Byb3RlY3Rpb25GdW5jdGlvblRlbXBsYXRlJztcblxuaW1wb3J0IHsgQWJzdHJhY3RDdXN0b21Ob2RlIH0gZnJvbSAnLi4vQWJzdHJhY3RDdXN0b21Ob2RlJztcbmltcG9ydCB7IE5vZGVVdGlscyB9IGZyb20gJy4uLy4uL25vZGUvTm9kZVV0aWxzJztcblxuQGluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIERlYnVnUHJvdGVjdGlvbkZ1bmN0aW9uTm9kZSBleHRlbmRzIEFic3RyYWN0Q3VzdG9tTm9kZSB7XG4gICAgLyoqXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBAaW5pdGlhbGl6YWJsZSgpXG4gICAgcHJpdmF0ZSBkZWJ1Z1Byb3RlY3Rpb25GdW5jdGlvbk5hbWU6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7SU9wdGlvbnN9IG9wdGlvbnNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvciAoXG4gICAgICAgIEBpbmplY3QoU2VydmljZUlkZW50aWZpZXJzLklPcHRpb25zKSBvcHRpb25zOiBJT3B0aW9uc1xuICAgICkge1xuICAgICAgICBzdXBlcihvcHRpb25zKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZGVidWdQcm90ZWN0aW9uRnVuY3Rpb25OYW1lXG4gICAgICovXG4gICAgcHVibGljIGluaXRpYWxpemUgKGRlYnVnUHJvdGVjdGlvbkZ1bmN0aW9uTmFtZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZGVidWdQcm90ZWN0aW9uRnVuY3Rpb25OYW1lID0gZGVidWdQcm90ZWN0aW9uRnVuY3Rpb25OYW1lO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHtUU3RhdGVtZW50W119XG4gICAgICovXG4gICAgcHJvdGVjdGVkIGdldE5vZGVTdHJ1Y3R1cmUgKCk6IFRTdGF0ZW1lbnRbXSB7XG4gICAgICAgIHJldHVybiBOb2RlVXRpbHMuY29udmVydENvZGVUb1N0cnVjdHVyZSh0aGlzLmdldFRlbXBsYXRlKCkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgcHJvdGVjdGVkIGdldFRlbXBsYXRlICgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gZm9ybWF0KERlYnVnUHJvdGVjdGlvbkZ1bmN0aW9uVGVtcGxhdGUoKSwge1xuICAgICAgICAgICAgZGVidWdQcm90ZWN0aW9uRnVuY3Rpb25OYW1lOiB0aGlzLmRlYnVnUHJvdGVjdGlvbkZ1bmN0aW9uTmFtZVxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXX0=