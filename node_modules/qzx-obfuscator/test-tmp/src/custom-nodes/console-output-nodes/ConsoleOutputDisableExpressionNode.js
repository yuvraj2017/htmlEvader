"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var inversify_1 = require("inversify");
var ServiceIdentifiers_1 = require("../../container/ServiceIdentifiers");
var format = require("string-template");
var ConsoleOutputDisableExpressionTemplate_1 = require("../../templates/custom-nodes/console-output-nodes/console-output-disable-expression-node/ConsoleOutputDisableExpressionTemplate");
var Initializable_1 = require("../../decorators/Initializable");
var AbstractCustomNode_1 = require("../AbstractCustomNode");
var NodeUtils_1 = require("../../node/NodeUtils");
var ConsoleOutputDisableExpressionNode = function (_AbstractCustomNode_) {
    _inherits(ConsoleOutputDisableExpressionNode, _AbstractCustomNode_);

    function ConsoleOutputDisableExpressionNode(randomGenerator, options) {
        _classCallCheck(this, ConsoleOutputDisableExpressionNode);

        var _this = _possibleConstructorReturn(this, (ConsoleOutputDisableExpressionNode.__proto__ || Object.getPrototypeOf(ConsoleOutputDisableExpressionNode)).call(this, options));

        _this.randomGenerator = randomGenerator;
        return _this;
    }

    _createClass(ConsoleOutputDisableExpressionNode, [{
        key: "initialize",
        value: function initialize(callsControllerFunctionName) {
            this.callsControllerFunctionName = callsControllerFunctionName;
        }
    }, {
        key: "getNodeStructure",
        value: function getNodeStructure() {
            return NodeUtils_1.NodeUtils.convertCodeToStructure(this.getTemplate());
        }
    }, {
        key: "getTemplate",
        value: function getTemplate() {
            return format(ConsoleOutputDisableExpressionTemplate_1.ConsoleOutputDisableExpressionTemplate(), {
                consoleLogDisableFunctionName: this.randomGenerator.getRandomVariableName(6),
                singleNodeCallControllerFunctionName: this.callsControllerFunctionName
            });
        }
    }]);

    return ConsoleOutputDisableExpressionNode;
}(AbstractCustomNode_1.AbstractCustomNode);
tslib_1.__decorate([Initializable_1.initializable(), tslib_1.__metadata("design:type", String)], ConsoleOutputDisableExpressionNode.prototype, "callsControllerFunctionName", void 0);
ConsoleOutputDisableExpressionNode = tslib_1.__decorate([inversify_1.injectable(), tslib_1.__param(0, inversify_1.inject(ServiceIdentifiers_1.ServiceIdentifiers.IRandomGenerator)), tslib_1.__param(1, inversify_1.inject(ServiceIdentifiers_1.ServiceIdentifiers.IOptions)), tslib_1.__metadata("design:paramtypes", [Object, Object])], ConsoleOutputDisableExpressionNode);
exports.ConsoleOutputDisableExpressionNode = ConsoleOutputDisableExpressionNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uc29sZU91dHB1dERpc2FibGVFeHByZXNzaW9uTm9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jdXN0b20tbm9kZXMvY29uc29sZS1vdXRwdXQtbm9kZXMvQ29uc29sZU91dHB1dERpc2FibGVFeHByZXNzaW9uTm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSwwQkFBK0M7QUFDL0MsbUNBQXdFO0FBRXhFLHFCQUEwQztBQU8xQyx1REFBeUw7QUFFekwsOEJBQStEO0FBRS9ELG1DQUEyRDtBQUMzRCwwQkFBaUQ7QUFHakQ7QUFBQSxBQUFhLEFBQWtDLEFBQUM7O0FBZ0I1QyxnREFDaUQsQUFBaUMsaUJBQ3pDLEFBQWlCO0FBRXRELEFBQUs7OzRLQUFDLEFBQU8sQUFBQyxBQUFDOztBQUVmLEFBQUksY0FBQyxBQUFlLGtCQUFHLEFBQWUsQUFBQyxBQUMzQzs7QUFBQyxBQUtNLEFBQVU7Ozs7bUNBQUUsQUFBbUM7QUFDbEQsQUFBSSxpQkFBQyxBQUEyQiw4QkFBRyxBQUEyQixBQUFDLEFBQ25FO0FBQUMsQUFLUyxBQUFnQjs7OztBQUN0QixBQUFNLG1CQUFDLFlBQVMsVUFBQyxBQUFzQix1QkFBQyxBQUFJLEtBQUMsQUFBVyxBQUFFLEFBQUMsQUFBQyxBQUNoRTtBQUFDLEFBS1MsQUFBVzs7OztBQUNqQixBQUFNLDBCQUFRLHlDQUFzQyxBQUFFO0FBQ2xELEFBQTZCLCtDQUFFLEFBQUksS0FBQyxBQUFlLGdCQUFDLEFBQXFCLHNCQUFDLEFBQUMsQUFBQztBQUM1RSxBQUFvQyxzREFBRSxBQUFJLEtBQUMsQUFBMkIsQUFDekUsQUFBQyxBQUFDLEFBQ1A7QUFKNEQsYUFBakQsQUFBTTtBQUloQixBQUNKOzs7O0VBaER1RCxxQkFBa0I7QUFLdEUsb0JBREMsZ0JBQWEsQUFBRSwrSUFDNEI7QUFMbkMsQUFBa0MseURBRDlDLFlBQVUsQUFBRSxjQWtCSixtQkFBQSxZQUFNLE9BQUMscUJBQWtCLG1CQUFDLEFBQWdCLEFBQUMsb0JBQzNDLG1CQUFBLFlBQU0sT0FBQyxxQkFBa0IsbUJBQUMsQUFBUSxBQUFDLHdFQWxCL0IsQUFBa0MsQUFnRDlDO0FBaERZLDZDQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluamVjdGFibGUsIGluamVjdCB9IGZyb20gJ2ludmVyc2lmeSc7XG5pbXBvcnQgeyBTZXJ2aWNlSWRlbnRpZmllcnMgfSBmcm9tICcuLi8uLi9jb250YWluZXIvU2VydmljZUlkZW50aWZpZXJzJztcblxuaW1wb3J0ICogYXMgZm9ybWF0IGZyb20gJ3N0cmluZy10ZW1wbGF0ZSc7XG5cbmltcG9ydCB7IFRTdGF0ZW1lbnQgfSBmcm9tICcuLi8uLi90eXBlcy9ub2RlL1RTdGF0ZW1lbnQnO1xuXG5pbXBvcnQgeyBJT3B0aW9ucyB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvb3B0aW9ucy9JT3B0aW9ucyc7XG5pbXBvcnQgeyBJUmFuZG9tR2VuZXJhdG9yIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy91dGlscy9JUmFuZG9tR2VuZXJhdG9yJztcblxuaW1wb3J0IHsgQ29uc29sZU91dHB1dERpc2FibGVFeHByZXNzaW9uVGVtcGxhdGUgfSBmcm9tICcuLi8uLi90ZW1wbGF0ZXMvY3VzdG9tLW5vZGVzL2NvbnNvbGUtb3V0cHV0LW5vZGVzL2NvbnNvbGUtb3V0cHV0LWRpc2FibGUtZXhwcmVzc2lvbi1ub2RlL0NvbnNvbGVPdXRwdXREaXNhYmxlRXhwcmVzc2lvblRlbXBsYXRlJztcblxuaW1wb3J0IHsgaW5pdGlhbGl6YWJsZSB9IGZyb20gJy4uLy4uL2RlY29yYXRvcnMvSW5pdGlhbGl6YWJsZSc7XG5cbmltcG9ydCB7IEFic3RyYWN0Q3VzdG9tTm9kZSB9IGZyb20gJy4uL0Fic3RyYWN0Q3VzdG9tTm9kZSc7XG5pbXBvcnQgeyBOb2RlVXRpbHMgfSBmcm9tICcuLi8uLi9ub2RlL05vZGVVdGlscyc7XG5cbkBpbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDb25zb2xlT3V0cHV0RGlzYWJsZUV4cHJlc3Npb25Ob2RlIGV4dGVuZHMgQWJzdHJhY3RDdXN0b21Ob2RlIHtcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIEBpbml0aWFsaXphYmxlKClcbiAgICBwcml2YXRlIGNhbGxzQ29udHJvbGxlckZ1bmN0aW9uTmFtZTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQHR5cGUge0lSYW5kb21HZW5lcmF0b3J9XG4gICAgICovXG4gICAgcHJpdmF0ZSByZWFkb25seSByYW5kb21HZW5lcmF0b3I6IElSYW5kb21HZW5lcmF0b3I7XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0lSYW5kb21HZW5lcmF0b3J9IHJhbmRvbUdlbmVyYXRvclxuICAgICAqIEBwYXJhbSB7SU9wdGlvbnN9IG9wdGlvbnNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvciAoXG4gICAgICAgIEBpbmplY3QoU2VydmljZUlkZW50aWZpZXJzLklSYW5kb21HZW5lcmF0b3IpIHJhbmRvbUdlbmVyYXRvcjogSVJhbmRvbUdlbmVyYXRvcixcbiAgICAgICAgQGluamVjdChTZXJ2aWNlSWRlbnRpZmllcnMuSU9wdGlvbnMpIG9wdGlvbnM6IElPcHRpb25zXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xuXG4gICAgICAgIHRoaXMucmFuZG9tR2VuZXJhdG9yID0gcmFuZG9tR2VuZXJhdG9yO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjYWxsc0NvbnRyb2xsZXJGdW5jdGlvbk5hbWVcbiAgICAgKi9cbiAgICBwdWJsaWMgaW5pdGlhbGl6ZSAoY2FsbHNDb250cm9sbGVyRnVuY3Rpb25OYW1lOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jYWxsc0NvbnRyb2xsZXJGdW5jdGlvbk5hbWUgPSBjYWxsc0NvbnRyb2xsZXJGdW5jdGlvbk5hbWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMge1RTdGF0ZW1lbnRbXX1cbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgZ2V0Tm9kZVN0cnVjdHVyZSAoKTogVFN0YXRlbWVudFtdIHtcbiAgICAgICAgcmV0dXJuIE5vZGVVdGlscy5jb252ZXJ0Q29kZVRvU3RydWN0dXJlKHRoaXMuZ2V0VGVtcGxhdGUoKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMge3N0cmluZ31cbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgZ2V0VGVtcGxhdGUgKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBmb3JtYXQoQ29uc29sZU91dHB1dERpc2FibGVFeHByZXNzaW9uVGVtcGxhdGUoKSwge1xuICAgICAgICAgICAgY29uc29sZUxvZ0Rpc2FibGVGdW5jdGlvbk5hbWU6IHRoaXMucmFuZG9tR2VuZXJhdG9yLmdldFJhbmRvbVZhcmlhYmxlTmFtZSg2KSxcbiAgICAgICAgICAgIHNpbmdsZU5vZGVDYWxsQ29udHJvbGxlckZ1bmN0aW9uTmFtZTogdGhpcy5jYWxsc0NvbnRyb2xsZXJGdW5jdGlvbk5hbWVcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19