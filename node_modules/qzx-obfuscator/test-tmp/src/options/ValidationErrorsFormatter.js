"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });

var ValidationErrorsFormatter = function () {
    function ValidationErrorsFormatter() {
        _classCallCheck(this, ValidationErrorsFormatter);
    }

    _createClass(ValidationErrorsFormatter, null, [{
        key: "format",
        value: function format(validationErrors) {
            var errorsArray = [];
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = validationErrors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var error = _step.value;

                    errorsArray.push(ValidationErrorsFormatter.formatError(error));
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            return errorsArray.join('\n');
        }
    }, {
        key: "formatError",
        value: function formatError(validationError) {
            var constraints = validationError.constraints;
            var errorString = "`" + validationError.property + "` errors:\n";
            for (var constraint in constraints) {
                if (!constraints.hasOwnProperty(constraint)) {
                    continue;
                }
                errorString += "    - " + constraints[constraint] + "\n";
            }
            return errorString;
        }
    }]);

    return ValidationErrorsFormatter;
}();

exports.ValidationErrorsFormatter = ValidationErrorsFormatter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmFsaWRhdGlvbkVycm9yc0Zvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9vcHRpb25zL1ZhbGlkYXRpb25FcnJvcnNGb3JtYXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O3NEQUVBOztJQUtXLEFBQU0sQUFBQyxBQUFNOzs7Ozs7OytCQUFFLEFBQW1DO0FBQ3JELGdCQUFNLEFBQVcsY0FBYSxBQUFFLEFBQUM7Ozs7OztBQUVqQyxBQUFHLEFBQUMsQUFBQyxxQ0FBZSxBQUFnQixBQUFDO0FBQUMsQUFBQyx3QkFBNUIsQUFBSzs7QUFDWixBQUFXLGdDQUFDLEFBQUksS0FBQyxBQUF5QiwwQkFBQyxBQUFXLFlBQUMsQUFBSyxBQUFDLEFBQUMsQUFBQyxBQUNuRTtBQUFDOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUQsQUFBTSxtQkFBQyxBQUFXLFlBQUMsQUFBSSxLQUFDLEFBQUksQUFBQyxBQUFDLEFBQ2xDO0FBQUMsQUFNTyxBQUFNLEFBQUMsQUFBVzs7O29DQUFFLEFBQWdDO0FBQ3hELGdCQUFNLEFBQVcsY0FBNkIsQUFBZSxnQkFBQyxBQUFXLEFBQUM7QUFFMUUsZ0JBQUksQUFBVyxBQUFXLG9CQUFLLEFBQWUsZ0JBQUMsQUFBUSxBQUFjLEFBQUM7QUFFdEUsQUFBRyxBQUFDLGlCQUFDLElBQU0sQUFBVSxjQUFJLEFBQVcsQUFBQyxhQUFDLEFBQUM7QUFDbkMsQUFBRSxBQUFDLG9CQUFDLENBQUMsQUFBVyxZQUFDLEFBQWMsZUFBQyxBQUFVLEFBQUMsQUFBQyxhQUFDLEFBQUM7QUFDMUMsQUFBUSxBQUFDLEFBQ2I7QUFBQztBQUVELEFBQVcsQUFBSSwwQ0FBUyxBQUFXLFlBQUMsQUFBVSxBQUFDLEFBQUksQUFBQyxBQUN4RDtBQUFDO0FBRUQsQUFBTSxtQkFBQyxBQUFXLEFBQUMsQUFDdkI7QUFBQyxBQUNKOzs7Ozs7QUFsQ0Qsb0NBa0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmFsaWRhdGlvbkVycm9yIH0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJztcblxuZXhwb3J0IGNsYXNzIFZhbGlkYXRpb25FcnJvcnNGb3JtYXR0ZXIge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7VmFsaWRhdGlvbkVycm9yW119IHZhbGlkYXRpb25FcnJvcnNcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgZm9ybWF0ICh2YWxpZGF0aW9uRXJyb3JzOiBWYWxpZGF0aW9uRXJyb3JbXSk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IGVycm9yc0FycmF5OiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgICAgIGZvciAoY29uc3QgZXJyb3Igb2YgdmFsaWRhdGlvbkVycm9ycykge1xuICAgICAgICAgICAgZXJyb3JzQXJyYXkucHVzaChWYWxpZGF0aW9uRXJyb3JzRm9ybWF0dGVyLmZvcm1hdEVycm9yKGVycm9yKSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZXJyb3JzQXJyYXkuam9pbignXFxuJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtWYWxpZGF0aW9uRXJyb3J9IHZhbGlkYXRpb25FcnJvclxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgcHJpdmF0ZSBzdGF0aWMgZm9ybWF0RXJyb3IgKHZhbGlkYXRpb25FcnJvcjogVmFsaWRhdGlvbkVycm9yKTogc3RyaW5nIHtcbiAgICAgICAgY29uc3QgY29uc3RyYWludHM6IHtbdHlwZTogc3RyaW5nXTogc3RyaW5nfSA9IHZhbGlkYXRpb25FcnJvci5jb25zdHJhaW50cztcblxuICAgICAgICBsZXQgZXJyb3JTdHJpbmc6IHN0cmluZyA9IGBcXGAke3ZhbGlkYXRpb25FcnJvci5wcm9wZXJ0eX1cXGAgZXJyb3JzOlxcbmA7XG5cbiAgICAgICAgZm9yIChjb25zdCBjb25zdHJhaW50IGluIGNvbnN0cmFpbnRzKSB7XG4gICAgICAgICAgICBpZiAoIWNvbnN0cmFpbnRzLmhhc093blByb3BlcnR5KGNvbnN0cmFpbnQpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGVycm9yU3RyaW5nICs9IGAgICAgLSAke2NvbnN0cmFpbnRzW2NvbnN0cmFpbnRdfVxcbmA7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZXJyb3JTdHJpbmc7XG4gICAgfVxufVxuIl19