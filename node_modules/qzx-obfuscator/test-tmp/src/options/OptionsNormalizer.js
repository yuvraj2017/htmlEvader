"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
var ControlFlowFlatteningThresholdRule_1 = require("./normalizer-rules/ControlFlowFlatteningThresholdRule");
var DeadCodeInjectionRule_1 = require("./normalizer-rules/DeadCodeInjectionRule");
var DeadCodeInjectionThresholdRule_1 = require("./normalizer-rules/DeadCodeInjectionThresholdRule");
var DomainLockRule_1 = require("./normalizer-rules/DomainLockRule");
var SelfDefendingRule_1 = require("./normalizer-rules/SelfDefendingRule");
var SourceMapBaseUrlRule_1 = require("./normalizer-rules/SourceMapBaseUrlRule");
var SourceMapFileNameRule_1 = require("./normalizer-rules/SourceMapFileNameRule");
var StringArrayRule_1 = require("./normalizer-rules/StringArrayRule");
var StringArrayEncodingRule_1 = require("./normalizer-rules/StringArrayEncodingRule");
var StringArrayThresholdRule_1 = require("./normalizer-rules/StringArrayThresholdRule");

var OptionsNormalizer = function () {
    function OptionsNormalizer() {
        _classCallCheck(this, OptionsNormalizer);
    }

    _createClass(OptionsNormalizer, null, [{
        key: "normalizeOptions",
        value: function normalizeOptions(options) {
            var normalizedOptions = Object.assign({}, options);
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = OptionsNormalizer.normalizerRules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var normalizerRule = _step.value;

                    normalizedOptions = normalizerRule(normalizedOptions);
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            return normalizedOptions;
        }
    }]);

    return OptionsNormalizer;
}();

OptionsNormalizer.normalizerRules = [ControlFlowFlatteningThresholdRule_1.ControlFlowFlatteningThresholdRule, DeadCodeInjectionRule_1.DeadCodeInjectionRule, DeadCodeInjectionThresholdRule_1.DeadCodeInjectionThresholdRule, DomainLockRule_1.DomainLockRule, SelfDefendingRule_1.SelfDefendingRule, SourceMapBaseUrlRule_1.SourceMapBaseUrlRule, SourceMapFileNameRule_1.SourceMapFileNameRule, StringArrayRule_1.StringArrayRule, StringArrayEncodingRule_1.StringArrayEncodingRule, StringArrayThresholdRule_1.StringArrayThresholdRule];
exports.OptionsNormalizer = OptionsNormalizer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3B0aW9uc05vcm1hbGl6ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvb3B0aW9ucy9PcHRpb25zTm9ybWFsaXplci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEsbURBQTJHO0FBQzNHLHNDQUFpRjtBQUNqRiwrQ0FBbUc7QUFDbkcsK0JBQW1FO0FBQ25FLGtDQUF5RTtBQUN6RSxxQ0FBK0U7QUFDL0Usc0NBQWlGO0FBQ2pGLGdDQUFxRTtBQUNyRSx3Q0FBcUY7QUFDckYseUNBQXVGLEFBRXZGOztJQXFCVyxBQUFNLEFBQUMsQUFBZ0I7Ozs7Ozs7eUNBQUUsQUFBaUI7QUFDN0MsZ0JBQUksQUFBaUIsc0NBQ2QsQUFBTyxBQUNiLEFBQUM7Ozs7OztBQUVGLEFBQUcsQUFBQyxBQUFDLHFDQUF3QixBQUFpQixrQkFBQyxBQUFlLEFBQUM7QUFBQyxBQUFDLHdCQUF0RCxBQUFjOztBQUNyQixBQUFpQix3Q0FBRyxBQUFjLGVBQUMsQUFBaUIsQUFBQyxBQUFDLEFBQzFEO0FBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFRCxBQUFNLG1CQUFDLEFBQWlCLEFBQUMsQUFDN0I7QUFBQzs7Ozs7O0FBM0J1QixrQkFBZSxrQkFBNkIsQ0FDaEUscUNBQWtDLG9DQUNsQyx3QkFBcUIsdUJBQ3JCLGlDQUE4QixnQ0FDOUIsaUJBQWMsZ0JBQ2Qsb0JBQWlCLG1CQUNqQix1QkFBb0Isc0JBQ3BCLHdCQUFxQix1QkFDckIsa0JBQWUsaUJBQ2YsMEJBQXVCLHlCQUN2QiwyQkFBd0IsQUFDM0IsQUFBQztBQWZOLDRCQWdDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRPcHRpb25zTm9ybWFsaXplclJ1bGUgfSBmcm9tICcuLi90eXBlcy9vcHRpb25zL1RPcHRpb25zTm9ybWFsaXplclJ1bGUnO1xuXG5pbXBvcnQgeyBJT3B0aW9ucyB9IGZyb20gJy4uL2ludGVyZmFjZXMvb3B0aW9ucy9JT3B0aW9ucyc7XG5cbmltcG9ydCB7IENvbnRyb2xGbG93RmxhdHRlbmluZ1RocmVzaG9sZFJ1bGUgfSBmcm9tICcuL25vcm1hbGl6ZXItcnVsZXMvQ29udHJvbEZsb3dGbGF0dGVuaW5nVGhyZXNob2xkUnVsZSc7XG5pbXBvcnQgeyBEZWFkQ29kZUluamVjdGlvblJ1bGUgfSBmcm9tICcuL25vcm1hbGl6ZXItcnVsZXMvRGVhZENvZGVJbmplY3Rpb25SdWxlJztcbmltcG9ydCB7IERlYWRDb2RlSW5qZWN0aW9uVGhyZXNob2xkUnVsZSB9IGZyb20gJy4vbm9ybWFsaXplci1ydWxlcy9EZWFkQ29kZUluamVjdGlvblRocmVzaG9sZFJ1bGUnO1xuaW1wb3J0IHsgRG9tYWluTG9ja1J1bGUgfSBmcm9tICcuL25vcm1hbGl6ZXItcnVsZXMvRG9tYWluTG9ja1J1bGUnO1xuaW1wb3J0IHsgU2VsZkRlZmVuZGluZ1J1bGUgfSBmcm9tICcuL25vcm1hbGl6ZXItcnVsZXMvU2VsZkRlZmVuZGluZ1J1bGUnO1xuaW1wb3J0IHsgU291cmNlTWFwQmFzZVVybFJ1bGUgfSBmcm9tICcuL25vcm1hbGl6ZXItcnVsZXMvU291cmNlTWFwQmFzZVVybFJ1bGUnO1xuaW1wb3J0IHsgU291cmNlTWFwRmlsZU5hbWVSdWxlIH0gZnJvbSAnLi9ub3JtYWxpemVyLXJ1bGVzL1NvdXJjZU1hcEZpbGVOYW1lUnVsZSc7XG5pbXBvcnQgeyBTdHJpbmdBcnJheVJ1bGUgfSBmcm9tICcuL25vcm1hbGl6ZXItcnVsZXMvU3RyaW5nQXJyYXlSdWxlJztcbmltcG9ydCB7IFN0cmluZ0FycmF5RW5jb2RpbmdSdWxlIH0gZnJvbSAnLi9ub3JtYWxpemVyLXJ1bGVzL1N0cmluZ0FycmF5RW5jb2RpbmdSdWxlJztcbmltcG9ydCB7IFN0cmluZ0FycmF5VGhyZXNob2xkUnVsZSB9IGZyb20gJy4vbm9ybWFsaXplci1ydWxlcy9TdHJpbmdBcnJheVRocmVzaG9sZFJ1bGUnO1xuXG5leHBvcnQgY2xhc3MgT3B0aW9uc05vcm1hbGl6ZXIge1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHtUT3B0aW9uc05vcm1hbGl6ZXJSdWxlW119XG4gICAgICovXG4gICAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgbm9ybWFsaXplclJ1bGVzOiBUT3B0aW9uc05vcm1hbGl6ZXJSdWxlW10gPSBbXG4gICAgICAgIENvbnRyb2xGbG93RmxhdHRlbmluZ1RocmVzaG9sZFJ1bGUsXG4gICAgICAgIERlYWRDb2RlSW5qZWN0aW9uUnVsZSxcbiAgICAgICAgRGVhZENvZGVJbmplY3Rpb25UaHJlc2hvbGRSdWxlLFxuICAgICAgICBEb21haW5Mb2NrUnVsZSxcbiAgICAgICAgU2VsZkRlZmVuZGluZ1J1bGUsXG4gICAgICAgIFNvdXJjZU1hcEJhc2VVcmxSdWxlLFxuICAgICAgICBTb3VyY2VNYXBGaWxlTmFtZVJ1bGUsXG4gICAgICAgIFN0cmluZ0FycmF5UnVsZSxcbiAgICAgICAgU3RyaW5nQXJyYXlFbmNvZGluZ1J1bGUsXG4gICAgICAgIFN0cmluZ0FycmF5VGhyZXNob2xkUnVsZSxcbiAgICBdO1xuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtJT3B0aW9uc30gb3B0aW9uc1xuICAgICAqIEByZXR1cm5zIHtJT3B0aW9uc31cbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIG5vcm1hbGl6ZU9wdGlvbnMgKG9wdGlvbnM6IElPcHRpb25zKTogSU9wdGlvbnMge1xuICAgICAgICBsZXQgbm9ybWFsaXplZE9wdGlvbnM6IElPcHRpb25zID0ge1xuICAgICAgICAgICAgLi4ub3B0aW9uc1xuICAgICAgICB9O1xuXG4gICAgICAgIGZvciAoY29uc3Qgbm9ybWFsaXplclJ1bGUgb2YgT3B0aW9uc05vcm1hbGl6ZXIubm9ybWFsaXplclJ1bGVzKSB7XG4gICAgICAgICAgICBub3JtYWxpemVkT3B0aW9ucyA9IG5vcm1hbGl6ZXJSdWxlKG5vcm1hbGl6ZWRPcHRpb25zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBub3JtYWxpemVkT3B0aW9ucztcbiAgICB9XG59XG4iXX0=