"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var InversifyContainerFacade_1 = require("../../InversifyContainerFacade");
var inversify_1 = require("inversify");
var ServiceIdentifiers_1 = require("../../ServiceIdentifiers");
var CalleeDataExtractor_1 = require("../../../enums/container/stack-trace-analyzer/CalleeDataExtractor");
var FunctionDeclarationCalleeDataExtractor_1 = require("../../../stack-trace-analyzer/callee-data-extractors/FunctionDeclarationCalleeDataExtractor");
var FunctionExpressionCalleeDataExtractor_1 = require("../../../stack-trace-analyzer/callee-data-extractors/FunctionExpressionCalleeDataExtractor");
var ObjectExpressionCalleeDataExtractor_1 = require("../../../stack-trace-analyzer/callee-data-extractors/ObjectExpressionCalleeDataExtractor");
var StackTraceAnalyzer_1 = require("../../../stack-trace-analyzer/StackTraceAnalyzer");
exports.stackTraceAnalyzerModule = new inversify_1.ContainerModule(function (bind) {
    bind(ServiceIdentifiers_1.ServiceIdentifiers.IStackTraceAnalyzer).to(StackTraceAnalyzer_1.StackTraceAnalyzer).inSingletonScope();
    bind(ServiceIdentifiers_1.ServiceIdentifiers.ICalleeDataExtractor).to(FunctionDeclarationCalleeDataExtractor_1.FunctionDeclarationCalleeDataExtractor).whenTargetNamed(CalleeDataExtractor_1.CalleeDataExtractor.FunctionDeclarationCalleeDataExtractor);
    bind(ServiceIdentifiers_1.ServiceIdentifiers.ICalleeDataExtractor).to(FunctionExpressionCalleeDataExtractor_1.FunctionExpressionCalleeDataExtractor).whenTargetNamed(CalleeDataExtractor_1.CalleeDataExtractor.FunctionExpressionCalleeDataExtractor);
    bind(ServiceIdentifiers_1.ServiceIdentifiers.ICalleeDataExtractor).to(ObjectExpressionCalleeDataExtractor_1.ObjectExpressionCalleeDataExtractor).whenTargetNamed(CalleeDataExtractor_1.CalleeDataExtractor.ObjectExpressionCalleeDataExtractor);
    bind(ServiceIdentifiers_1.ServiceIdentifiers.Factory__ICalleeDataExtractor).toFactory(InversifyContainerFacade_1.InversifyContainerFacade.getCacheFactory(ServiceIdentifiers_1.ServiceIdentifiers.ICalleeDataExtractor));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RhY2tUcmFjZUFuYWx5emVyTW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbnRhaW5lci9tb2R1bGVzL3N0YWNrLXRyYWNlLWFuYWx5emVyL1N0YWNrVHJhY2VBbmFseXplck1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx5Q0FBMEU7QUFDMUUsMEJBQXdEO0FBQ3hELG1DQUE4RDtBQUs5RCxvQ0FBd0c7QUFDeEcsdURBQXFKO0FBQ3JKLHNEQUFtSjtBQUNuSixvREFBK0k7QUFDL0ksbUNBQXNGO0FBRXpFLFFBQUEsQUFBd0IsK0JBQW1DLFlBQWUsZ0JBQUMsVUFBQyxBQUFxQjtBQUUxRyxBQUFJLFNBQXNCLHFCQUFrQixtQkFBQyxBQUFtQixBQUFDLHFCQUM1RCxBQUFFLEdBQUMscUJBQWtCLEFBQUMsb0JBQ3RCLEFBQWdCLEFBQUUsQUFBQztBQUd4QixBQUFJLFNBQXVCLHFCQUFrQixtQkFBQyxBQUFvQixBQUFDLHNCQUM5RCxBQUFFLEdBQUMseUNBQXNDLEFBQUMsd0NBQzFDLEFBQWUsZ0JBQUMsc0JBQW1CLG9CQUFDLEFBQXNDLEFBQUMsQUFBQztBQUVqRixBQUFJLFNBQXVCLHFCQUFrQixtQkFBQyxBQUFvQixBQUFDLHNCQUM5RCxBQUFFLEdBQUMsd0NBQXFDLEFBQUMsdUNBQ3pDLEFBQWUsZ0JBQUMsc0JBQW1CLG9CQUFDLEFBQXFDLEFBQUMsQUFBQztBQUVoRixBQUFJLFNBQXVCLHFCQUFrQixtQkFBQyxBQUFvQixBQUFDLHNCQUM5RCxBQUFFLEdBQUMsc0NBQW1DLEFBQUMscUNBQ3ZDLEFBQWUsZ0JBQUMsc0JBQW1CLG9CQUFDLEFBQW1DLEFBQUMsQUFBQztBQUc5RSxBQUFJLFNBQXVCLHFCQUFrQixtQkFBQyxBQUE2QixBQUFDLCtCQUN2RSxBQUFTLFVBQXVCLDJCQUF3Qix5QkFDcEQsQUFBZSxnQkFDWixxQkFBa0IsbUJBQUMsQUFBb0IsQUFDMUMsQUFBQyxBQUFDLEFBQ2Y7QUFBQyxBQUFDLEFBQUMsQ0F6QmlFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW52ZXJzaWZ5Q29udGFpbmVyRmFjYWRlIH0gZnJvbSAnLi4vLi4vSW52ZXJzaWZ5Q29udGFpbmVyRmFjYWRlJztcbmltcG9ydCB7IENvbnRhaW5lck1vZHVsZSwgaW50ZXJmYWNlcyB9IGZyb20gJ2ludmVyc2lmeSc7XG5pbXBvcnQgeyBTZXJ2aWNlSWRlbnRpZmllcnMgfSBmcm9tICcuLi8uLi9TZXJ2aWNlSWRlbnRpZmllcnMnO1xuXG5pbXBvcnQgeyBJQ2FsbGVlRGF0YUV4dHJhY3RvciB9IGZyb20gJy4uLy4uLy4uL2ludGVyZmFjZXMvc3RhY2stdHJhY2UtYW5hbHl6ZXIvSUNhbGxlZURhdGFFeHRyYWN0b3InO1xuaW1wb3J0IHsgSVN0YWNrVHJhY2VBbmFseXplciB9IGZyb20gJy4uLy4uLy4uL2ludGVyZmFjZXMvc3RhY2stdHJhY2UtYW5hbHl6ZXIvSVN0YWNrVHJhY2VBbmFseXplcic7XG5cbmltcG9ydCB7IENhbGxlZURhdGFFeHRyYWN0b3IgfSBmcm9tICcuLi8uLi8uLi9lbnVtcy9jb250YWluZXIvc3RhY2stdHJhY2UtYW5hbHl6ZXIvQ2FsbGVlRGF0YUV4dHJhY3Rvcic7XG5pbXBvcnQgeyBGdW5jdGlvbkRlY2xhcmF0aW9uQ2FsbGVlRGF0YUV4dHJhY3RvciB9IGZyb20gJy4uLy4uLy4uL3N0YWNrLXRyYWNlLWFuYWx5emVyL2NhbGxlZS1kYXRhLWV4dHJhY3RvcnMvRnVuY3Rpb25EZWNsYXJhdGlvbkNhbGxlZURhdGFFeHRyYWN0b3InO1xuaW1wb3J0IHsgRnVuY3Rpb25FeHByZXNzaW9uQ2FsbGVlRGF0YUV4dHJhY3RvciB9IGZyb20gJy4uLy4uLy4uL3N0YWNrLXRyYWNlLWFuYWx5emVyL2NhbGxlZS1kYXRhLWV4dHJhY3RvcnMvRnVuY3Rpb25FeHByZXNzaW9uQ2FsbGVlRGF0YUV4dHJhY3Rvcic7XG5pbXBvcnQgeyBPYmplY3RFeHByZXNzaW9uQ2FsbGVlRGF0YUV4dHJhY3RvciB9IGZyb20gJy4uLy4uLy4uL3N0YWNrLXRyYWNlLWFuYWx5emVyL2NhbGxlZS1kYXRhLWV4dHJhY3RvcnMvT2JqZWN0RXhwcmVzc2lvbkNhbGxlZURhdGFFeHRyYWN0b3InO1xuaW1wb3J0IHsgU3RhY2tUcmFjZUFuYWx5emVyIH0gZnJvbSAnLi4vLi4vLi4vc3RhY2stdHJhY2UtYW5hbHl6ZXIvU3RhY2tUcmFjZUFuYWx5emVyJztcblxuZXhwb3J0IGNvbnN0IHN0YWNrVHJhY2VBbmFseXplck1vZHVsZTogaW50ZXJmYWNlcy5Db250YWluZXJNb2R1bGUgPSBuZXcgQ29udGFpbmVyTW9kdWxlKChiaW5kOiBpbnRlcmZhY2VzLkJpbmQpID0+IHtcbiAgICAvLyBzdGFjayB0cmFjZSBhbmFseXplclxuICAgIGJpbmQ8SVN0YWNrVHJhY2VBbmFseXplcj4oU2VydmljZUlkZW50aWZpZXJzLklTdGFja1RyYWNlQW5hbHl6ZXIpXG4gICAgICAgIC50byhTdGFja1RyYWNlQW5hbHl6ZXIpXG4gICAgICAgIC5pblNpbmdsZXRvblNjb3BlKCk7XG5cbiAgICAvLyBjYWxsZWUgZGF0YSBleHRyYWN0b3JzXG4gICAgYmluZDxJQ2FsbGVlRGF0YUV4dHJhY3Rvcj4oU2VydmljZUlkZW50aWZpZXJzLklDYWxsZWVEYXRhRXh0cmFjdG9yKVxuICAgICAgICAudG8oRnVuY3Rpb25EZWNsYXJhdGlvbkNhbGxlZURhdGFFeHRyYWN0b3IpXG4gICAgICAgIC53aGVuVGFyZ2V0TmFtZWQoQ2FsbGVlRGF0YUV4dHJhY3Rvci5GdW5jdGlvbkRlY2xhcmF0aW9uQ2FsbGVlRGF0YUV4dHJhY3Rvcik7XG5cbiAgICBiaW5kPElDYWxsZWVEYXRhRXh0cmFjdG9yPihTZXJ2aWNlSWRlbnRpZmllcnMuSUNhbGxlZURhdGFFeHRyYWN0b3IpXG4gICAgICAgIC50byhGdW5jdGlvbkV4cHJlc3Npb25DYWxsZWVEYXRhRXh0cmFjdG9yKVxuICAgICAgICAud2hlblRhcmdldE5hbWVkKENhbGxlZURhdGFFeHRyYWN0b3IuRnVuY3Rpb25FeHByZXNzaW9uQ2FsbGVlRGF0YUV4dHJhY3Rvcik7XG5cbiAgICBiaW5kPElDYWxsZWVEYXRhRXh0cmFjdG9yPihTZXJ2aWNlSWRlbnRpZmllcnMuSUNhbGxlZURhdGFFeHRyYWN0b3IpXG4gICAgICAgIC50byhPYmplY3RFeHByZXNzaW9uQ2FsbGVlRGF0YUV4dHJhY3RvcilcbiAgICAgICAgLndoZW5UYXJnZXROYW1lZChDYWxsZWVEYXRhRXh0cmFjdG9yLk9iamVjdEV4cHJlc3Npb25DYWxsZWVEYXRhRXh0cmFjdG9yKTtcblxuICAgIC8vIG5vZGUgdHJhbnNmb3JtZXJzIGZhY3RvcnlcbiAgICBiaW5kPElDYWxsZWVEYXRhRXh0cmFjdG9yPihTZXJ2aWNlSWRlbnRpZmllcnMuRmFjdG9yeV9fSUNhbGxlZURhdGFFeHRyYWN0b3IpXG4gICAgICAgIC50b0ZhY3Rvcnk8SUNhbGxlZURhdGFFeHRyYWN0b3I+KEludmVyc2lmeUNvbnRhaW5lckZhY2FkZVxuICAgICAgICAgICAgLmdldENhY2hlRmFjdG9yeTxDYWxsZWVEYXRhRXh0cmFjdG9yLCBJQ2FsbGVlRGF0YUV4dHJhY3Rvcj4oXG4gICAgICAgICAgICAgICAgU2VydmljZUlkZW50aWZpZXJzLklDYWxsZWVEYXRhRXh0cmFjdG9yXG4gICAgICAgICAgICApKTtcbn0pO1xuIl19