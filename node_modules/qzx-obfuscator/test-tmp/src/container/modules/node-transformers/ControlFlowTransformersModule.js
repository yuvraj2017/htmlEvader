"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var InversifyContainerFacade_1 = require("../../InversifyContainerFacade");
var inversify_1 = require("inversify");
var ServiceIdentifiers_1 = require("../../ServiceIdentifiers");
var ControlFlowReplacer_1 = require("../../../enums/container/node-transformers/ControlFlowReplacer");
var BinaryExpressionControlFlowReplacer_1 = require("../../../node-transformers/control-flow-transformers/control-flow-replacers/BinaryExpressionControlFlowReplacer");
var CallExpressionControlFlowReplacer_1 = require("../../../node-transformers/control-flow-transformers/control-flow-replacers/CallExpressionControlFlowReplacer");
var LogicalExpressionControlFlowReplacer_1 = require("../../../node-transformers/control-flow-transformers/control-flow-replacers/LogicalExpressionControlFlowReplacer");
var StringLiteralControlFlowReplacer_1 = require("../../../node-transformers/control-flow-transformers/control-flow-replacers/StringLiteralControlFlowReplacer");
exports.controlFlowTransformersModule = new inversify_1.ContainerModule(function (bind) {
    bind(ServiceIdentifiers_1.ServiceIdentifiers.IControlFlowReplacer).to(BinaryExpressionControlFlowReplacer_1.BinaryExpressionControlFlowReplacer).whenTargetNamed(ControlFlowReplacer_1.ControlFlowReplacer.BinaryExpressionControlFlowReplacer);
    bind(ServiceIdentifiers_1.ServiceIdentifiers.IControlFlowReplacer).to(CallExpressionControlFlowReplacer_1.CallExpressionControlFlowReplacer).whenTargetNamed(ControlFlowReplacer_1.ControlFlowReplacer.CallExpressionControlFlowReplacer);
    bind(ServiceIdentifiers_1.ServiceIdentifiers.IControlFlowReplacer).to(LogicalExpressionControlFlowReplacer_1.LogicalExpressionControlFlowReplacer).whenTargetNamed(ControlFlowReplacer_1.ControlFlowReplacer.LogicalExpressionControlFlowReplacer);
    bind(ServiceIdentifiers_1.ServiceIdentifiers.IControlFlowReplacer).to(StringLiteralControlFlowReplacer_1.StringLiteralControlFlowReplacer).whenTargetNamed(ControlFlowReplacer_1.ControlFlowReplacer.StringLiteralControlFlowReplacer);
    bind(ServiceIdentifiers_1.ServiceIdentifiers.Factory__IControlFlowReplacer).toFactory(InversifyContainerFacade_1.InversifyContainerFacade.getCacheFactory(ServiceIdentifiers_1.ServiceIdentifiers.IControlFlowReplacer));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udHJvbEZsb3dUcmFuc2Zvcm1lcnNNb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29udGFpbmVyL21vZHVsZXMvbm9kZS10cmFuc2Zvcm1lcnMvQ29udHJvbEZsb3dUcmFuc2Zvcm1lcnNNb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseUNBQTBFO0FBQzFFLDBCQUF3RDtBQUN4RCxtQ0FBOEQ7QUFJOUQsb0NBQXFHO0FBRXJHLG9EQUFzSztBQUN0SyxrREFBa0s7QUFDbEsscURBQXdLO0FBQ3hLLGlEQUFnSztBQUVuSixRQUFBLEFBQTZCLG9DQUFtQyxZQUFlLGdCQUFDLFVBQUMsQUFBcUI7QUFDL0csQUFBSSxTQUF1QixxQkFBa0IsbUJBQUMsQUFBb0IsQUFBQyxzQkFDOUQsQUFBRSxHQUFDLHNDQUFtQyxBQUFDLHFDQUN2QyxBQUFlLGdCQUFDLHNCQUFtQixvQkFBQyxBQUFtQyxBQUFDLEFBQUM7QUFFOUUsQUFBSSxTQUF1QixxQkFBa0IsbUJBQUMsQUFBb0IsQUFBQyxzQkFDOUQsQUFBRSxHQUFDLG9DQUFpQyxBQUFDLG1DQUNyQyxBQUFlLGdCQUFDLHNCQUFtQixvQkFBQyxBQUFpQyxBQUFDLEFBQUM7QUFFNUUsQUFBSSxTQUF1QixxQkFBa0IsbUJBQUMsQUFBb0IsQUFBQyxzQkFDOUQsQUFBRSxHQUFDLHVDQUFvQyxBQUFDLHNDQUN4QyxBQUFlLGdCQUFDLHNCQUFtQixvQkFBQyxBQUFvQyxBQUFDLEFBQUM7QUFFL0UsQUFBSSxTQUF1QixxQkFBa0IsbUJBQUMsQUFBb0IsQUFBQyxzQkFDOUQsQUFBRSxHQUFDLG1DQUFnQyxBQUFDLGtDQUNwQyxBQUFlLGdCQUFDLHNCQUFtQixvQkFBQyxBQUFnQyxBQUFDLEFBQUM7QUFFM0UsQUFBSSxTQUF1QixxQkFBa0IsbUJBQUMsQUFBNkIsQUFBQywrQkFDdkUsQUFBUyxVQUF1QiwyQkFBd0IseUJBQ3BELEFBQWUsZ0JBQTRDLHFCQUFrQixtQkFBQyxBQUFvQixBQUFDLEFBQUMsQUFBQyxBQUNsSDtBQUFDLEFBQUMsQUFBQyxDQXBCc0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnZlcnNpZnlDb250YWluZXJGYWNhZGUgfSBmcm9tICcuLi8uLi9JbnZlcnNpZnlDb250YWluZXJGYWNhZGUnO1xuaW1wb3J0IHsgQ29udGFpbmVyTW9kdWxlLCBpbnRlcmZhY2VzIH0gZnJvbSAnaW52ZXJzaWZ5JztcbmltcG9ydCB7IFNlcnZpY2VJZGVudGlmaWVycyB9IGZyb20gJy4uLy4uL1NlcnZpY2VJZGVudGlmaWVycyc7XG5cbmltcG9ydCB7IElDb250cm9sRmxvd1JlcGxhY2VyIH0gZnJvbSAnLi4vLi4vLi4vaW50ZXJmYWNlcy9ub2RlLXRyYW5zZm9ybWVycy9jb250cm9sLWZsb3ctdHJhbnNmb3JtZXJzL0lDb250cm9sRmxvd1JlcGxhY2VyJztcblxuaW1wb3J0IHsgQ29udHJvbEZsb3dSZXBsYWNlciB9IGZyb20gJy4uLy4uLy4uL2VudW1zL2NvbnRhaW5lci9ub2RlLXRyYW5zZm9ybWVycy9Db250cm9sRmxvd1JlcGxhY2VyJztcblxuaW1wb3J0IHsgQmluYXJ5RXhwcmVzc2lvbkNvbnRyb2xGbG93UmVwbGFjZXIgfSBmcm9tICcuLi8uLi8uLi9ub2RlLXRyYW5zZm9ybWVycy9jb250cm9sLWZsb3ctdHJhbnNmb3JtZXJzL2NvbnRyb2wtZmxvdy1yZXBsYWNlcnMvQmluYXJ5RXhwcmVzc2lvbkNvbnRyb2xGbG93UmVwbGFjZXInO1xuaW1wb3J0IHsgQ2FsbEV4cHJlc3Npb25Db250cm9sRmxvd1JlcGxhY2VyIH0gZnJvbSAnLi4vLi4vLi4vbm9kZS10cmFuc2Zvcm1lcnMvY29udHJvbC1mbG93LXRyYW5zZm9ybWVycy9jb250cm9sLWZsb3ctcmVwbGFjZXJzL0NhbGxFeHByZXNzaW9uQ29udHJvbEZsb3dSZXBsYWNlcic7XG5pbXBvcnQgeyBMb2dpY2FsRXhwcmVzc2lvbkNvbnRyb2xGbG93UmVwbGFjZXIgfSBmcm9tICcuLi8uLi8uLi9ub2RlLXRyYW5zZm9ybWVycy9jb250cm9sLWZsb3ctdHJhbnNmb3JtZXJzL2NvbnRyb2wtZmxvdy1yZXBsYWNlcnMvTG9naWNhbEV4cHJlc3Npb25Db250cm9sRmxvd1JlcGxhY2VyJztcbmltcG9ydCB7IFN0cmluZ0xpdGVyYWxDb250cm9sRmxvd1JlcGxhY2VyIH0gZnJvbSAnLi4vLi4vLi4vbm9kZS10cmFuc2Zvcm1lcnMvY29udHJvbC1mbG93LXRyYW5zZm9ybWVycy9jb250cm9sLWZsb3ctcmVwbGFjZXJzL1N0cmluZ0xpdGVyYWxDb250cm9sRmxvd1JlcGxhY2VyJztcblxuZXhwb3J0IGNvbnN0IGNvbnRyb2xGbG93VHJhbnNmb3JtZXJzTW9kdWxlOiBpbnRlcmZhY2VzLkNvbnRhaW5lck1vZHVsZSA9IG5ldyBDb250YWluZXJNb2R1bGUoKGJpbmQ6IGludGVyZmFjZXMuQmluZCkgPT4ge1xuICAgIGJpbmQ8SUNvbnRyb2xGbG93UmVwbGFjZXI+KFNlcnZpY2VJZGVudGlmaWVycy5JQ29udHJvbEZsb3dSZXBsYWNlcilcbiAgICAgICAgLnRvKEJpbmFyeUV4cHJlc3Npb25Db250cm9sRmxvd1JlcGxhY2VyKVxuICAgICAgICAud2hlblRhcmdldE5hbWVkKENvbnRyb2xGbG93UmVwbGFjZXIuQmluYXJ5RXhwcmVzc2lvbkNvbnRyb2xGbG93UmVwbGFjZXIpO1xuXG4gICAgYmluZDxJQ29udHJvbEZsb3dSZXBsYWNlcj4oU2VydmljZUlkZW50aWZpZXJzLklDb250cm9sRmxvd1JlcGxhY2VyKVxuICAgICAgICAudG8oQ2FsbEV4cHJlc3Npb25Db250cm9sRmxvd1JlcGxhY2VyKVxuICAgICAgICAud2hlblRhcmdldE5hbWVkKENvbnRyb2xGbG93UmVwbGFjZXIuQ2FsbEV4cHJlc3Npb25Db250cm9sRmxvd1JlcGxhY2VyKTtcblxuICAgIGJpbmQ8SUNvbnRyb2xGbG93UmVwbGFjZXI+KFNlcnZpY2VJZGVudGlmaWVycy5JQ29udHJvbEZsb3dSZXBsYWNlcilcbiAgICAgICAgLnRvKExvZ2ljYWxFeHByZXNzaW9uQ29udHJvbEZsb3dSZXBsYWNlcilcbiAgICAgICAgLndoZW5UYXJnZXROYW1lZChDb250cm9sRmxvd1JlcGxhY2VyLkxvZ2ljYWxFeHByZXNzaW9uQ29udHJvbEZsb3dSZXBsYWNlcik7XG5cbiAgICBiaW5kPElDb250cm9sRmxvd1JlcGxhY2VyPihTZXJ2aWNlSWRlbnRpZmllcnMuSUNvbnRyb2xGbG93UmVwbGFjZXIpXG4gICAgICAgIC50byhTdHJpbmdMaXRlcmFsQ29udHJvbEZsb3dSZXBsYWNlcilcbiAgICAgICAgLndoZW5UYXJnZXROYW1lZChDb250cm9sRmxvd1JlcGxhY2VyLlN0cmluZ0xpdGVyYWxDb250cm9sRmxvd1JlcGxhY2VyKTtcblxuICAgIGJpbmQ8SUNvbnRyb2xGbG93UmVwbGFjZXI+KFNlcnZpY2VJZGVudGlmaWVycy5GYWN0b3J5X19JQ29udHJvbEZsb3dSZXBsYWNlcilcbiAgICAgICAgLnRvRmFjdG9yeTxJQ29udHJvbEZsb3dSZXBsYWNlcj4oSW52ZXJzaWZ5Q29udGFpbmVyRmFjYWRlXG4gICAgICAgICAgICAuZ2V0Q2FjaGVGYWN0b3J5PENvbnRyb2xGbG93UmVwbGFjZXIsIElDb250cm9sRmxvd1JlcGxhY2VyPihTZXJ2aWNlSWRlbnRpZmllcnMuSUNvbnRyb2xGbG93UmVwbGFjZXIpKTtcbn0pO1xuIl19