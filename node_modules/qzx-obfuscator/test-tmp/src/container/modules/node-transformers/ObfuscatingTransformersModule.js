"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var InversifyContainerFacade_1 = require("../../InversifyContainerFacade");
var inversify_1 = require("inversify");
var ServiceIdentifiers_1 = require("../../ServiceIdentifiers");
var IdentifierObfuscatingReplacer_1 = require("../../../enums/container/node-transformers/IdentifierObfuscatingReplacer");
var LiteralObfuscatingReplacer_1 = require("../../../enums/container/node-transformers/LiteralObfuscatingReplacer");
var BaseIdentifierObfuscatingReplacer_1 = require("../../../node-transformers/obfuscating-transformers/obfuscating-replacers/identifier-obfuscating-replacers/BaseIdentifierObfuscatingReplacer");
var BooleanLiteralObfuscatingReplacer_1 = require("../../../node-transformers/obfuscating-transformers/obfuscating-replacers/literal-obfuscating-replacers/BooleanLiteralObfuscatingReplacer");
var NumberLiteralObfuscatingReplacer_1 = require("../../../node-transformers/obfuscating-transformers/obfuscating-replacers/literal-obfuscating-replacers/NumberLiteralObfuscatingReplacer");
var StringLiteralObfuscatingReplacer_1 = require("../../../node-transformers/obfuscating-transformers/obfuscating-replacers/literal-obfuscating-replacers/StringLiteralObfuscatingReplacer");
exports.obfuscatingTransformersModule = new inversify_1.ContainerModule(function (bind) {
    bind(ServiceIdentifiers_1.ServiceIdentifiers.IObfuscatingReplacer).to(BooleanLiteralObfuscatingReplacer_1.BooleanLiteralObfuscatingReplacer).whenTargetNamed(LiteralObfuscatingReplacer_1.LiteralObfuscatingReplacer.BooleanLiteralObfuscatingReplacer);
    bind(ServiceIdentifiers_1.ServiceIdentifiers.IObfuscatingReplacer).to(NumberLiteralObfuscatingReplacer_1.NumberLiteralObfuscatingReplacer).whenTargetNamed(LiteralObfuscatingReplacer_1.LiteralObfuscatingReplacer.NumberLiteralObfuscatingReplacer);
    bind(ServiceIdentifiers_1.ServiceIdentifiers.IObfuscatingReplacer).to(StringLiteralObfuscatingReplacer_1.StringLiteralObfuscatingReplacer).whenTargetNamed(LiteralObfuscatingReplacer_1.LiteralObfuscatingReplacer.StringLiteralObfuscatingReplacer);
    bind(ServiceIdentifiers_1.ServiceIdentifiers.IIdentifierObfuscatingReplacer).to(BaseIdentifierObfuscatingReplacer_1.BaseIdentifierObfuscatingReplacer).whenTargetNamed(IdentifierObfuscatingReplacer_1.IdentifierObfuscatingReplacer.BaseIdentifierObfuscatingReplacer);
    bind(ServiceIdentifiers_1.ServiceIdentifiers.Factory__IObfuscatingReplacer).toFactory(InversifyContainerFacade_1.InversifyContainerFacade.getCacheFactory(ServiceIdentifiers_1.ServiceIdentifiers.IObfuscatingReplacer));
    bind(ServiceIdentifiers_1.ServiceIdentifiers.Factory__IIdentifierObfuscatingReplacer).toFactory(InversifyContainerFacade_1.InversifyContainerFacade.getCacheFactory(ServiceIdentifiers_1.ServiceIdentifiers.IIdentifierObfuscatingReplacer));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT2JmdXNjYXRpbmdUcmFuc2Zvcm1lcnNNb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29udGFpbmVyL21vZHVsZXMvbm9kZS10cmFuc2Zvcm1lcnMvT2JmdXNjYXRpbmdUcmFuc2Zvcm1lcnNNb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseUNBQTBFO0FBQzFFLDBCQUF3RDtBQUN4RCxtQ0FBOEQ7QUFLOUQsOENBQXlIO0FBQ3pILDJDQUFtSDtBQUVuSCxrREFBaU07QUFDak0sa0RBQThMO0FBQzlMLGlEQUE0TDtBQUM1TCxpREFBNEw7QUFFL0ssUUFBQSxBQUE2QixvQ0FBbUMsWUFBZSxnQkFBQyxVQUFDLEFBQXFCO0FBRS9HLEFBQUksU0FBdUIscUJBQWtCLG1CQUFDLEFBQW9CLEFBQUMsc0JBQzlELEFBQUUsR0FBQyxvQ0FBaUMsQUFBQyxtQ0FDckMsQUFBZSxnQkFBQyw2QkFBMEIsMkJBQUMsQUFBaUMsQUFBQyxBQUFDO0FBRW5GLEFBQUksU0FBdUIscUJBQWtCLG1CQUFDLEFBQW9CLEFBQUMsc0JBQzlELEFBQUUsR0FBQyxtQ0FBZ0MsQUFBQyxrQ0FDcEMsQUFBZSxnQkFBQyw2QkFBMEIsMkJBQUMsQUFBZ0MsQUFBQyxBQUFDO0FBRWxGLEFBQUksU0FBdUIscUJBQWtCLG1CQUFDLEFBQW9CLEFBQUMsc0JBQzlELEFBQUUsR0FBQyxtQ0FBZ0MsQUFBQyxrQ0FDcEMsQUFBZSxnQkFBQyw2QkFBMEIsMkJBQUMsQUFBZ0MsQUFBQyxBQUFDO0FBR2xGLEFBQUksU0FBaUMscUJBQWtCLG1CQUFDLEFBQThCLEFBQUMsZ0NBQ2xGLEFBQUUsR0FBQyxvQ0FBaUMsQUFBQyxtQ0FDckMsQUFBZSxnQkFBQyxnQ0FBNkIsOEJBQUMsQUFBaUMsQUFBQyxBQUFDO0FBR3RGLEFBQUksU0FBdUIscUJBQWtCLG1CQUFDLEFBQTZCLEFBQUMsK0JBQ3ZFLEFBQVMsVUFBdUIsMkJBQXdCLHlCQUNwRCxBQUFlLGdCQUNaLHFCQUFrQixtQkFBQyxBQUFvQixBQUMxQyxBQUFDLEFBQUM7QUFHWCxBQUFJLFNBQWlDLHFCQUFrQixtQkFBQyxBQUF1QyxBQUFDLHlDQUMzRixBQUFTLFVBQWlDLDJCQUF3Qix5QkFDOUQsQUFBZSxnQkFDWixxQkFBa0IsbUJBQUMsQUFBOEIsQUFDcEQsQUFBQyxBQUFDLEFBQ2Y7QUFBQyxBQUFDLEFBQUMsQ0FoQ3NFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW52ZXJzaWZ5Q29udGFpbmVyRmFjYWRlIH0gZnJvbSAnLi4vLi4vSW52ZXJzaWZ5Q29udGFpbmVyRmFjYWRlJztcbmltcG9ydCB7IENvbnRhaW5lck1vZHVsZSwgaW50ZXJmYWNlcyB9IGZyb20gJ2ludmVyc2lmeSc7XG5pbXBvcnQgeyBTZXJ2aWNlSWRlbnRpZmllcnMgfSBmcm9tICcuLi8uLi9TZXJ2aWNlSWRlbnRpZmllcnMnO1xuXG5pbXBvcnQgeyBJSWRlbnRpZmllck9iZnVzY2F0aW5nUmVwbGFjZXIgfSBmcm9tICcuLi8uLi8uLi9pbnRlcmZhY2VzL25vZGUtdHJhbnNmb3JtZXJzL29iZnVzY2F0aW5nLXRyYW5zZm9ybWVycy9JSWRlbnRpZmllck9iZnVzY2F0aW5nUmVwbGFjZXInO1xuaW1wb3J0IHsgSU9iZnVzY2F0aW5nUmVwbGFjZXIgfSBmcm9tICcuLi8uLi8uLi9pbnRlcmZhY2VzL25vZGUtdHJhbnNmb3JtZXJzL29iZnVzY2F0aW5nLXRyYW5zZm9ybWVycy9JT2JmdXNjYXRpbmdSZXBsYWNlcic7XG5cbmltcG9ydCB7IElkZW50aWZpZXJPYmZ1c2NhdGluZ1JlcGxhY2VyIH0gZnJvbSAnLi4vLi4vLi4vZW51bXMvY29udGFpbmVyL25vZGUtdHJhbnNmb3JtZXJzL0lkZW50aWZpZXJPYmZ1c2NhdGluZ1JlcGxhY2VyJztcbmltcG9ydCB7IExpdGVyYWxPYmZ1c2NhdGluZ1JlcGxhY2VyIH0gZnJvbSAnLi4vLi4vLi4vZW51bXMvY29udGFpbmVyL25vZGUtdHJhbnNmb3JtZXJzL0xpdGVyYWxPYmZ1c2NhdGluZ1JlcGxhY2VyJztcblxuaW1wb3J0IHsgQmFzZUlkZW50aWZpZXJPYmZ1c2NhdGluZ1JlcGxhY2VyIH0gZnJvbSAnLi4vLi4vLi4vbm9kZS10cmFuc2Zvcm1lcnMvb2JmdXNjYXRpbmctdHJhbnNmb3JtZXJzL29iZnVzY2F0aW5nLXJlcGxhY2Vycy9pZGVudGlmaWVyLW9iZnVzY2F0aW5nLXJlcGxhY2Vycy9CYXNlSWRlbnRpZmllck9iZnVzY2F0aW5nUmVwbGFjZXInO1xuaW1wb3J0IHsgQm9vbGVhbkxpdGVyYWxPYmZ1c2NhdGluZ1JlcGxhY2VyIH0gZnJvbSAnLi4vLi4vLi4vbm9kZS10cmFuc2Zvcm1lcnMvb2JmdXNjYXRpbmctdHJhbnNmb3JtZXJzL29iZnVzY2F0aW5nLXJlcGxhY2Vycy9saXRlcmFsLW9iZnVzY2F0aW5nLXJlcGxhY2Vycy9Cb29sZWFuTGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXInO1xuaW1wb3J0IHsgTnVtYmVyTGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXIgfSBmcm9tICcuLi8uLi8uLi9ub2RlLXRyYW5zZm9ybWVycy9vYmZ1c2NhdGluZy10cmFuc2Zvcm1lcnMvb2JmdXNjYXRpbmctcmVwbGFjZXJzL2xpdGVyYWwtb2JmdXNjYXRpbmctcmVwbGFjZXJzL051bWJlckxpdGVyYWxPYmZ1c2NhdGluZ1JlcGxhY2VyJztcbmltcG9ydCB7IFN0cmluZ0xpdGVyYWxPYmZ1c2NhdGluZ1JlcGxhY2VyIH0gZnJvbSAnLi4vLi4vLi4vbm9kZS10cmFuc2Zvcm1lcnMvb2JmdXNjYXRpbmctdHJhbnNmb3JtZXJzL29iZnVzY2F0aW5nLXJlcGxhY2Vycy9saXRlcmFsLW9iZnVzY2F0aW5nLXJlcGxhY2Vycy9TdHJpbmdMaXRlcmFsT2JmdXNjYXRpbmdSZXBsYWNlcic7XG5cbmV4cG9ydCBjb25zdCBvYmZ1c2NhdGluZ1RyYW5zZm9ybWVyc01vZHVsZTogaW50ZXJmYWNlcy5Db250YWluZXJNb2R1bGUgPSBuZXcgQ29udGFpbmVyTW9kdWxlKChiaW5kOiBpbnRlcmZhY2VzLkJpbmQpID0+IHtcbiAgICAvLyBsaXRlcmFsIG9iZnVzY2F0aW5nIHJlcGxhY2Vyc1xuICAgIGJpbmQ8SU9iZnVzY2F0aW5nUmVwbGFjZXI+KFNlcnZpY2VJZGVudGlmaWVycy5JT2JmdXNjYXRpbmdSZXBsYWNlcilcbiAgICAgICAgLnRvKEJvb2xlYW5MaXRlcmFsT2JmdXNjYXRpbmdSZXBsYWNlcilcbiAgICAgICAgLndoZW5UYXJnZXROYW1lZChMaXRlcmFsT2JmdXNjYXRpbmdSZXBsYWNlci5Cb29sZWFuTGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXIpO1xuXG4gICAgYmluZDxJT2JmdXNjYXRpbmdSZXBsYWNlcj4oU2VydmljZUlkZW50aWZpZXJzLklPYmZ1c2NhdGluZ1JlcGxhY2VyKVxuICAgICAgICAudG8oTnVtYmVyTGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXIpXG4gICAgICAgIC53aGVuVGFyZ2V0TmFtZWQoTGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXIuTnVtYmVyTGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXIpO1xuXG4gICAgYmluZDxJT2JmdXNjYXRpbmdSZXBsYWNlcj4oU2VydmljZUlkZW50aWZpZXJzLklPYmZ1c2NhdGluZ1JlcGxhY2VyKVxuICAgICAgICAudG8oU3RyaW5nTGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXIpXG4gICAgICAgIC53aGVuVGFyZ2V0TmFtZWQoTGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXIuU3RyaW5nTGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXIpO1xuXG4gICAgLy8gaWRlbnRpZmllciBvYmZ1c2NhdGluZyByZXBsYWNlcnNcbiAgICBiaW5kPElJZGVudGlmaWVyT2JmdXNjYXRpbmdSZXBsYWNlcj4oU2VydmljZUlkZW50aWZpZXJzLklJZGVudGlmaWVyT2JmdXNjYXRpbmdSZXBsYWNlcilcbiAgICAgICAgLnRvKEJhc2VJZGVudGlmaWVyT2JmdXNjYXRpbmdSZXBsYWNlcilcbiAgICAgICAgLndoZW5UYXJnZXROYW1lZChJZGVudGlmaWVyT2JmdXNjYXRpbmdSZXBsYWNlci5CYXNlSWRlbnRpZmllck9iZnVzY2F0aW5nUmVwbGFjZXIpO1xuXG4gICAgLy8gbGl0ZXJhbCBvYmZ1c2NhdGluZyByZXBsYWNlciBmYWN0b3J5XG4gICAgYmluZDxJT2JmdXNjYXRpbmdSZXBsYWNlcj4oU2VydmljZUlkZW50aWZpZXJzLkZhY3RvcnlfX0lPYmZ1c2NhdGluZ1JlcGxhY2VyKVxuICAgICAgICAudG9GYWN0b3J5PElPYmZ1c2NhdGluZ1JlcGxhY2VyPihJbnZlcnNpZnlDb250YWluZXJGYWNhZGVcbiAgICAgICAgICAgIC5nZXRDYWNoZUZhY3Rvcnk8TGl0ZXJhbE9iZnVzY2F0aW5nUmVwbGFjZXIsIElPYmZ1c2NhdGluZ1JlcGxhY2VyPihcbiAgICAgICAgICAgICAgICBTZXJ2aWNlSWRlbnRpZmllcnMuSU9iZnVzY2F0aW5nUmVwbGFjZXJcbiAgICAgICAgICAgICkpO1xuXG4gICAgLy8gaWRlbnRpZmllciBvYmZ1c2NhdGluZyByZXBsYWNlciBmYWN0b3J5XG4gICAgYmluZDxJSWRlbnRpZmllck9iZnVzY2F0aW5nUmVwbGFjZXI+KFNlcnZpY2VJZGVudGlmaWVycy5GYWN0b3J5X19JSWRlbnRpZmllck9iZnVzY2F0aW5nUmVwbGFjZXIpXG4gICAgICAgIC50b0ZhY3Rvcnk8SUlkZW50aWZpZXJPYmZ1c2NhdGluZ1JlcGxhY2VyPihJbnZlcnNpZnlDb250YWluZXJGYWNhZGVcbiAgICAgICAgICAgIC5nZXRDYWNoZUZhY3Rvcnk8SWRlbnRpZmllck9iZnVzY2F0aW5nUmVwbGFjZXIsIElJZGVudGlmaWVyT2JmdXNjYXRpbmdSZXBsYWNlcj4oXG4gICAgICAgICAgICAgICAgU2VydmljZUlkZW50aWZpZXJzLklJZGVudGlmaWVyT2JmdXNjYXRpbmdSZXBsYWNlclxuICAgICAgICAgICAgKSk7XG59KTtcbiJdfQ==